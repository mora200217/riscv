
 /----------------------------------------------------------------------------\
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |  Copyright (C) 2012 - 2025  Claire Xenia Wolf <claire@yosyshq.com>         |
 |  Distributed under an ISC-like license, type "license" to see terms        |
 \----------------------------------------------------------------------------/
 Yosys 0.53 (git sha1 53c22ab7c0ced80861c7536c5dae682c30fb5834, clang++ 16.0.0 -fPIC -O3)

-- Running command `verilog_defaults -push; verilog_defaults -add -defer; read_verilog -formal SOC.v cores/bram/bram.v cores/cpu/femtorv32_quark.v cores/uart/perip_uart.v cores/uart/uart.v cores/mult/perip_mult.v cores/mult/mult.v; verilog_defaults -pop; attrmap -tocase keep -imap keep="true" keep=1 -imap keep="false" keep=0 -remove keep=0; synth_ecp5 -top SOC; write_json build/SOC.json' --

1. Executing Verilog-2005 frontend: SOC.v
Parsing formal Verilog input from `SOC.v' to AST representation.
Storing AST representation for module `$abstract\SOC'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: cores/bram/bram.v
Parsing formal Verilog input from `cores/bram/bram.v' to AST representation.
Storing AST representation for module `$abstract\bram'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: cores/cpu/femtorv32_quark.v
Parsing formal Verilog input from `cores/cpu/femtorv32_quark.v' to AST representation.
Storing AST representation for module `$abstract\FemtoRV32'.
Storing AST representation for module `$abstract\Memory'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: cores/uart/perip_uart.v
Parsing formal Verilog input from `cores/uart/perip_uart.v' to AST representation.
Storing AST representation for module `$abstract\peripheral_uart'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: cores/uart/uart.v
Parsing formal Verilog input from `cores/uart/uart.v' to AST representation.
Storing AST representation for module `$abstract\uart'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: cores/mult/perip_mult.v
Parsing formal Verilog input from `cores/mult/perip_mult.v' to AST representation.
Storing AST representation for module `$abstract\peripheral_mult'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: cores/mult/mult.v
Parsing formal Verilog input from `cores/mult/mult.v' to AST representation.
Storing AST representation for module `$abstract\mult'.
Successfully finished Verilog frontend.

8. Executing ATTRMAP pass (move or copy attributes).

9. Executing SYNTH_ECP5 pass.

9.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\$__ABC9_LUT5'.
Generating RTLIL representation for module `\$__ABC9_LUT6'.
Generating RTLIL representation for module `\$__ABC9_LUT7'.
Generating RTLIL representation for module `\L6MUX21'.
Generating RTLIL representation for module `\CCU2C'.
Generating RTLIL representation for module `\TRELLIS_RAM16X2'.
Generating RTLIL representation for module `\PFUMX'.
Generating RTLIL representation for module `\TRELLIS_DPR16X4'.
Generating RTLIL representation for module `\DPR16X4C'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\TRELLIS_FF'.
Generating RTLIL representation for module `\TRELLIS_IO'.
Generating RTLIL representation for module `\INV'.
Generating RTLIL representation for module `\TRELLIS_COMB'.
Generating RTLIL representation for module `\DP16KD'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Successfully finished Verilog frontend.

9.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/cells_bb.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/cells_bb.v' to AST representation.
Generating RTLIL representation for module `\MULT18X18D'.
Generating RTLIL representation for module `\ALU54B'.
Generating RTLIL representation for module `\EHXPLLL'.
Generating RTLIL representation for module `\DTR'.
Generating RTLIL representation for module `\OSCG'.
Generating RTLIL representation for module `\USRMCLK'.
Generating RTLIL representation for module `\JTAGG'.
Generating RTLIL representation for module `\DELAYF'.
Generating RTLIL representation for module `\DELAYG'.
Generating RTLIL representation for module `\IDDRX1F'.
Generating RTLIL representation for module `\IDDRX2F'.
Generating RTLIL representation for module `\IDDR71B'.
Generating RTLIL representation for module `\IDDRX2DQA'.
Generating RTLIL representation for module `\ODDRX1F'.
Generating RTLIL representation for module `\ODDRX2F'.
Generating RTLIL representation for module `\ODDR71B'.
Generating RTLIL representation for module `\OSHX2A'.
Generating RTLIL representation for module `\ODDRX2DQA'.
Generating RTLIL representation for module `\ODDRX2DQSB'.
Generating RTLIL representation for module `\TSHX2DQA'.
Generating RTLIL representation for module `\TSHX2DQSA'.
Generating RTLIL representation for module `\DQSBUFM'.
Generating RTLIL representation for module `\DDRDLLA'.
Generating RTLIL representation for module `\DLLDELD'.
Generating RTLIL representation for module `\CLKDIVF'.
Generating RTLIL representation for module `\ECLKSYNCB'.
Generating RTLIL representation for module `\ECLKBRIDGECS'.
Generating RTLIL representation for module `\DCCA'.
Generating RTLIL representation for module `\DCSC'.
Generating RTLIL representation for module `\DCUA'.
Generating RTLIL representation for module `\EXTREFB'.
Generating RTLIL representation for module `\PCSCLKDIV'.
Generating RTLIL representation for module `\PUR'.
Generating RTLIL representation for module `\GSR'.
Generating RTLIL representation for module `\SGSR'.
Generating RTLIL representation for module `\PDPW16KD'.
Successfully finished Verilog frontend.

9.3. Executing HIERARCHY pass (managing design hierarchy).

9.4. Executing AST frontend in derive mode using pre-parsed AST for module `\SOC'.
Generating RTLIL representation for module `\SOC'.

9.4.1. Analyzing design hierarchy..
Top module:  \SOC

9.4.2. Executing AST frontend in derive mode using pre-parsed AST for module `\peripheral_mult'.
Generating RTLIL representation for module `\peripheral_mult'.
Parameter \clk_freq = 25000000
Parameter \baud = 115200

9.4.3. Executing AST frontend in derive mode using pre-parsed AST for module `\peripheral_uart'.
Parameter \clk_freq = 25000000
Parameter \baud = 115200
Generating RTLIL representation for module `$paramod$5ba1b67a19911e09c0ee8c956b41f966dbad00ae\peripheral_uart'.

9.4.4. Executing AST frontend in derive mode using pre-parsed AST for module `\bram'.
Generating RTLIL representation for module `\bram'.

9.4.5. Executing AST frontend in derive mode using pre-parsed AST for module `\FemtoRV32'.
Generating RTLIL representation for module `\FemtoRV32'.

9.4.6. Analyzing design hierarchy..
Top module:  \SOC
Used module:     \peripheral_mult
Used module:     $paramod$5ba1b67a19911e09c0ee8c956b41f966dbad00ae\peripheral_uart
Used module:     \bram
Used module:     \FemtoRV32

9.4.7. Executing AST frontend in derive mode using pre-parsed AST for module `\mult'.
Generating RTLIL representation for module `\mult'.
Parameter \freq_hz = 25000000
Parameter \baud = 115200

9.4.8. Executing AST frontend in derive mode using pre-parsed AST for module `\uart'.
Parameter \freq_hz = 25000000
Parameter \baud = 115200
Generating RTLIL representation for module `$paramod$df55812022425781aef872d53070d057b210643d\uart'.

9.4.9. Analyzing design hierarchy..
Top module:  \SOC
Used module:     \peripheral_mult
Used module:         \mult
Used module:     $paramod$5ba1b67a19911e09c0ee8c956b41f966dbad00ae\peripheral_uart
Used module:         $paramod$df55812022425781aef872d53070d057b210643d\uart
Used module:     \bram
Used module:     \FemtoRV32

9.4.10. Analyzing design hierarchy..
Top module:  \SOC
Used module:     \peripheral_mult
Used module:         \mult
Used module:     $paramod$5ba1b67a19911e09c0ee8c956b41f966dbad00ae\peripheral_uart
Used module:         $paramod$df55812022425781aef872d53070d057b210643d\uart
Used module:     \bram
Used module:     \FemtoRV32
Removing unused module `$abstract\mult'.
Removing unused module `$abstract\peripheral_mult'.
Removing unused module `$abstract\uart'.
Removing unused module `$abstract\peripheral_uart'.
Removing unused module `$abstract\Memory'.
Removing unused module `$abstract\FemtoRV32'.
Removing unused module `$abstract\bram'.
Removing unused module `$abstract\SOC'.
Removed 8 unused modules.

9.5. Executing PROC pass (convert processes to netlists).

9.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `bram.$proc$cores/bram/bram.v:0$284'.
Cleaned up 0 empty switches.

9.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 4 switch rules as full_case in process $proc$cores/uart/uart.v:122$449 in module $paramod$df55812022425781aef872d53070d057b210643d\uart.
Marked 5 switch rules as full_case in process $proc$cores/uart/uart.v:66$441 in module $paramod$df55812022425781aef872d53070d057b210643d\uart.
Marked 1 switch rules as full_case in process $proc$cores/uart/uart.v:34$437 in module $paramod$df55812022425781aef872d53070d057b210643d\uart.
Marked 5 switch rules as full_case in process $proc$cores/mult/mult.v:32$427 in module mult.
Marked 2 switch rules as full_case in process $proc$cores/cpu/femtorv32_quark.v:334$412 in module FemtoRV32.
Marked 2 switch rules as full_case in process $proc$cores/cpu/femtorv32_quark.v:102$297 in module FemtoRV32.
Marked 4 switch rules as full_case in process $proc$cores/bram/bram.v:20$257 in module bram.
Marked 1 switch rules as full_case in process $proc$cores/uart/perip_uart.v:45$249 in module $paramod$5ba1b67a19911e09c0ee8c956b41f966dbad00ae\peripheral_uart.
Marked 1 switch rules as full_case in process $proc$cores/uart/perip_uart.v:29$241 in module $paramod$5ba1b67a19911e09c0ee8c956b41f966dbad00ae\peripheral_uart.
Marked 3 switch rules as full_case in process $proc$cores/mult/perip_mult.v:56$239 in module peripheral_mult.
Marked 2 switch rules as full_case in process $proc$cores/mult/perip_mult.v:38$234 in module peripheral_mult.
Marked 2 switch rules as full_case in process $proc$cores/mult/perip_mult.v:20$233 in module peripheral_mult.
Marked 1 switch rules as full_case in process $proc$SOC.v:102$232 in module SOC.
Marked 1 switch rules as full_case in process $proc$SOC.v:89$231 in module SOC.
Removed a total of 0 dead cases.

9.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 1 redundant assignment.
Promoted 41 assignments to connections.

9.5.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\mult.$proc$cores/mult/mult.v:0$435'.
  Set init value: \result = 0
  Set init value: \done = 1'0
Found init rule in `$paramod$5ba1b67a19911e09c0ee8c956b41f966dbad00ae\peripheral_uart.$proc$cores/uart/perip_uart.v:21$252'.
  Set init value: \uart_ctrl = 8'00000000
Found init rule in `$paramod$5ba1b67a19911e09c0ee8c956b41f966dbad00ae\peripheral_uart.$proc$cores/uart/perip_uart.v:20$251'.
  Set init value: \d_in_uart = 8'00000000
Found init rule in `$paramod$5ba1b67a19911e09c0ee8c956b41f966dbad00ae\peripheral_uart.$proc$cores/uart/perip_uart.v:0$250'.
  Set init value: \ledout = 1'0

9.5.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \reset in `\mult.$proc$cores/mult/mult.v:32$427'.

9.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~48 debug messages>

9.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod$df55812022425781aef872d53070d057b210643d\uart.$proc$cores/uart/uart.v:122$449'.
     1/5: $0\txd_reg[7:0]
     2/5: $0\tx_count16[3:0]
     3/5: $0\tx_bitcount[3:0]
     4/5: $0\uart_txd[0:0]
     5/5: $0\tx_busy[0:0]
Creating decoders for process `$paramod$df55812022425781aef872d53070d057b210643d\uart.$proc$cores/uart/uart.v:66$441'.
     1/7: $0\rxd_reg[7:0]
     2/7: $0\rx_bitcount[3:0]
     3/7: $0\rx_count16[3:0]
     4/7: $0\rx_busy[0:0]
     5/7: $0\rx_avail[0:0]
     6/7: $0\rx_error[0:0]
     7/7: $0\rx_data[7:0]
Creating decoders for process `$paramod$df55812022425781aef872d53070d057b210643d\uart.$proc$cores/uart/uart.v:52$440'.
Creating decoders for process `$paramod$df55812022425781aef872d53070d057b210643d\uart.$proc$cores/uart/uart.v:34$437'.
     1/1: $0\enable16_counter[15:0]
Creating decoders for process `\mult.$proc$cores/mult/mult.v:0$435'.
Creating decoders for process `\mult.$proc$cores/mult/mult.v:32$427'.
     1/15: $5\state[2:0]
     2/15: $4\state[2:0]
     3/15: $3\state[2:0]
     4/15: $2\state[2:0]
     5/15: $2\result[31:0]
     6/15: $2\done[0:0]
     7/15: $2\count[4:0]
     8/15: $2\B[15:0]
     9/15: $2\A[15:0]
    10/15: $1\count[4:0]
    11/15: $1\state[2:0]
    12/15: $1\done[0:0]
    13/15: $1\result[31:0]
    14/15: $1\B[15:0]
    15/15: $1\A[15:0]
Creating decoders for process `\FemtoRV32.$proc$cores/cpu/femtorv32_quark.v:380$425'.
Creating decoders for process `\FemtoRV32.$proc$cores/cpu/femtorv32_quark.v:334$412'.
     1/5: $0\state[3:0]
     2/5: $0\instr[29:0]
     3/5: $0\PC[23:0]
     4/5: $0\rs2[31:0]
     5/5: $0\rs1[31:0]
Creating decoders for process `\FemtoRV32.$proc$cores/cpu/femtorv32_quark.v:153$337'.
     1/2: $0\aluShamt[4:0]
     2/2: $0\aluReg[31:0]
Creating decoders for process `\FemtoRV32.$proc$cores/cpu/femtorv32_quark.v:102$297'.
     1/6: $2$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$285_EN[31:0]$307
     2/6: $2$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$285_DATA[31:0]$306
     3/6: $2$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$285_ADDR[4:0]$305
     4/6: $1$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$285_EN[31:0]$303
     5/6: $1$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$285_DATA[31:0]$302
     6/6: $1$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$285_ADDR[4:0]$301
Creating decoders for process `\bram.$proc$cores/bram/bram.v:20$257'.
     1/13: $1$memwr$\MEM$cores/bram/bram.v:27$256_EN[31:0]$282
     2/13: $1$memwr$\MEM$cores/bram/bram.v:27$256_DATA[31:0]$281
     3/13: $1$memwr$\MEM$cores/bram/bram.v:27$256_ADDR[29:0]$280
     4/13: $1$memwr$\MEM$cores/bram/bram.v:26$255_EN[31:0]$279
     5/13: $1$memwr$\MEM$cores/bram/bram.v:26$255_DATA[31:0]$278
     6/13: $1$memwr$\MEM$cores/bram/bram.v:26$255_ADDR[29:0]$277
     7/13: $1$memwr$\MEM$cores/bram/bram.v:25$254_EN[31:0]$276
     8/13: $1$memwr$\MEM$cores/bram/bram.v:25$254_DATA[31:0]$275
     9/13: $1$memwr$\MEM$cores/bram/bram.v:25$254_ADDR[29:0]$274
    10/13: $1$memwr$\MEM$cores/bram/bram.v:24$253_EN[31:0]$273
    11/13: $1$memwr$\MEM$cores/bram/bram.v:24$253_DATA[31:0]$272
    12/13: $1$memwr$\MEM$cores/bram/bram.v:24$253_ADDR[29:0]$271
    13/13: $0\mem_rdata[31:0]
Creating decoders for process `$paramod$5ba1b67a19911e09c0ee8c956b41f966dbad00ae\peripheral_uart.$proc$cores/uart/perip_uart.v:21$252'.
Creating decoders for process `$paramod$5ba1b67a19911e09c0ee8c956b41f966dbad00ae\peripheral_uart.$proc$cores/uart/perip_uart.v:20$251'.
Creating decoders for process `$paramod$5ba1b67a19911e09c0ee8c956b41f966dbad00ae\peripheral_uart.$proc$cores/uart/perip_uart.v:0$250'.
Creating decoders for process `$paramod$5ba1b67a19911e09c0ee8c956b41f966dbad00ae\peripheral_uart.$proc$cores/uart/perip_uart.v:45$249'.
     1/1: $1\d_out[31:0]
Creating decoders for process `$paramod$5ba1b67a19911e09c0ee8c956b41f966dbad00ae\peripheral_uart.$proc$cores/uart/perip_uart.v:38$244'.
Creating decoders for process `$paramod$5ba1b67a19911e09c0ee8c956b41f966dbad00ae\peripheral_uart.$proc$cores/uart/perip_uart.v:29$241'.
     1/1: $1\s[1:0]
Creating decoders for process `\peripheral_mult.$proc$cores/mult/perip_mult.v:56$239'.
     1/3: $3\d_out[31:0]
     2/3: $2\d_out[31:0]
     3/3: $1\d_out[31:0]
Creating decoders for process `\peripheral_mult.$proc$cores/mult/perip_mult.v:38$234'.
     1/6: $2\init[0:0]
     2/6: $2\B[15:0]
     3/6: $2\A[15:0]
     4/6: $1\B[15:0]
     5/6: $1\A[15:0]
     6/6: $1\init[0:0]
Creating decoders for process `\peripheral_mult.$proc$cores/mult/perip_mult.v:20$233'.
     1/2: $2\s[4:0]
     2/2: $1\s[4:0]
Creating decoders for process `\SOC.$proc$SOC.v:102$232'.
     1/1: $1\mem_rdata[31:0]
Creating decoders for process `\SOC.$proc$SOC.v:89$231'.
     1/1: $1\cs[6:0]

9.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod$5ba1b67a19911e09c0ee8c956b41f966dbad00ae\peripheral_uart.\s' from process `$paramod$5ba1b67a19911e09c0ee8c956b41f966dbad00ae\peripheral_uart.$proc$cores/uart/perip_uart.v:29$241'.
No latch inferred for signal `\peripheral_mult.\s' from process `\peripheral_mult.$proc$cores/mult/perip_mult.v:20$233'.
No latch inferred for signal `\SOC.\mem_rdata' from process `\SOC.$proc$SOC.v:102$232'.
No latch inferred for signal `\SOC.\cs' from process `\SOC.$proc$SOC.v:89$231'.

9.5.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod$df55812022425781aef872d53070d057b210643d\uart.\tx_busy' using process `$paramod$df55812022425781aef872d53070d057b210643d\uart.$proc$cores/uart/uart.v:122$449'.
  created $dff cell `$procdff$935' with positive edge clock.
Creating register for signal `$paramod$df55812022425781aef872d53070d057b210643d\uart.\uart_txd' using process `$paramod$df55812022425781aef872d53070d057b210643d\uart.$proc$cores/uart/uart.v:122$449'.
  created $dff cell `$procdff$936' with positive edge clock.
Creating register for signal `$paramod$df55812022425781aef872d53070d057b210643d\uart.\tx_bitcount' using process `$paramod$df55812022425781aef872d53070d057b210643d\uart.$proc$cores/uart/uart.v:122$449'.
  created $dff cell `$procdff$937' with positive edge clock.
Creating register for signal `$paramod$df55812022425781aef872d53070d057b210643d\uart.\tx_count16' using process `$paramod$df55812022425781aef872d53070d057b210643d\uart.$proc$cores/uart/uart.v:122$449'.
  created $dff cell `$procdff$938' with positive edge clock.
Creating register for signal `$paramod$df55812022425781aef872d53070d057b210643d\uart.\txd_reg' using process `$paramod$df55812022425781aef872d53070d057b210643d\uart.$proc$cores/uart/uart.v:122$449'.
  created $dff cell `$procdff$939' with positive edge clock.
Creating register for signal `$paramod$df55812022425781aef872d53070d057b210643d\uart.\rx_data' using process `$paramod$df55812022425781aef872d53070d057b210643d\uart.$proc$cores/uart/uart.v:66$441'.
  created $dff cell `$procdff$940' with positive edge clock.
Creating register for signal `$paramod$df55812022425781aef872d53070d057b210643d\uart.\rx_error' using process `$paramod$df55812022425781aef872d53070d057b210643d\uart.$proc$cores/uart/uart.v:66$441'.
  created $dff cell `$procdff$941' with positive edge clock.
Creating register for signal `$paramod$df55812022425781aef872d53070d057b210643d\uart.\rx_avail' using process `$paramod$df55812022425781aef872d53070d057b210643d\uart.$proc$cores/uart/uart.v:66$441'.
  created $dff cell `$procdff$942' with positive edge clock.
Creating register for signal `$paramod$df55812022425781aef872d53070d057b210643d\uart.\rx_busy' using process `$paramod$df55812022425781aef872d53070d057b210643d\uart.$proc$cores/uart/uart.v:66$441'.
  created $dff cell `$procdff$943' with positive edge clock.
Creating register for signal `$paramod$df55812022425781aef872d53070d057b210643d\uart.\rx_count16' using process `$paramod$df55812022425781aef872d53070d057b210643d\uart.$proc$cores/uart/uart.v:66$441'.
  created $dff cell `$procdff$944' with positive edge clock.
Creating register for signal `$paramod$df55812022425781aef872d53070d057b210643d\uart.\rx_bitcount' using process `$paramod$df55812022425781aef872d53070d057b210643d\uart.$proc$cores/uart/uart.v:66$441'.
  created $dff cell `$procdff$945' with positive edge clock.
Creating register for signal `$paramod$df55812022425781aef872d53070d057b210643d\uart.\rxd_reg' using process `$paramod$df55812022425781aef872d53070d057b210643d\uart.$proc$cores/uart/uart.v:66$441'.
  created $dff cell `$procdff$946' with positive edge clock.
Creating register for signal `$paramod$df55812022425781aef872d53070d057b210643d\uart.\uart_rxd1' using process `$paramod$df55812022425781aef872d53070d057b210643d\uart.$proc$cores/uart/uart.v:52$440'.
  created $dff cell `$procdff$947' with positive edge clock.
Creating register for signal `$paramod$df55812022425781aef872d53070d057b210643d\uart.\uart_rxd2' using process `$paramod$df55812022425781aef872d53070d057b210643d\uart.$proc$cores/uart/uart.v:52$440'.
  created $dff cell `$procdff$948' with positive edge clock.
Creating register for signal `$paramod$df55812022425781aef872d53070d057b210643d\uart.\enable16_counter' using process `$paramod$df55812022425781aef872d53070d057b210643d\uart.$proc$cores/uart/uart.v:34$437'.
  created $dff cell `$procdff$949' with positive edge clock.
Creating register for signal `\mult.\A' using process `\mult.$proc$cores/mult/mult.v:32$427'.
  created $dff cell `$procdff$954' with positive edge clock.
Creating register for signal `\mult.\B' using process `\mult.$proc$cores/mult/mult.v:32$427'.
  created $dff cell `$procdff$959' with positive edge clock.
Creating register for signal `\mult.\result' using process `\mult.$proc$cores/mult/mult.v:32$427'.
  created $adff cell `$procdff$962' with positive edge clock and positive level reset.
Creating register for signal `\mult.\done' using process `\mult.$proc$cores/mult/mult.v:32$427'.
  created $adff cell `$procdff$965' with positive edge clock and positive level reset.
Creating register for signal `\mult.\state' using process `\mult.$proc$cores/mult/mult.v:32$427'.
  created $adff cell `$procdff$968' with positive edge clock and positive level reset.
Creating register for signal `\mult.\count' using process `\mult.$proc$cores/mult/mult.v:32$427'.
  created $dff cell `$procdff$973' with positive edge clock.
Creating register for signal `\FemtoRV32.\cycles' using process `\FemtoRV32.$proc$cores/cpu/femtorv32_quark.v:380$425'.
  created $dff cell `$procdff$974' with positive edge clock.
Creating register for signal `\FemtoRV32.\rs1' using process `\FemtoRV32.$proc$cores/cpu/femtorv32_quark.v:334$412'.
  created $dff cell `$procdff$975' with positive edge clock.
Creating register for signal `\FemtoRV32.\rs2' using process `\FemtoRV32.$proc$cores/cpu/femtorv32_quark.v:334$412'.
  created $dff cell `$procdff$976' with positive edge clock.
Creating register for signal `\FemtoRV32.\PC' using process `\FemtoRV32.$proc$cores/cpu/femtorv32_quark.v:334$412'.
  created $dff cell `$procdff$977' with positive edge clock.
Creating register for signal `\FemtoRV32.\instr' using process `\FemtoRV32.$proc$cores/cpu/femtorv32_quark.v:334$412'.
  created $dff cell `$procdff$978' with positive edge clock.
Creating register for signal `\FemtoRV32.\state' using process `\FemtoRV32.$proc$cores/cpu/femtorv32_quark.v:334$412'.
  created $dff cell `$procdff$979' with positive edge clock.
Creating register for signal `\FemtoRV32.\aluReg' using process `\FemtoRV32.$proc$cores/cpu/femtorv32_quark.v:153$337'.
  created $dff cell `$procdff$980' with positive edge clock.
Creating register for signal `\FemtoRV32.\aluShamt' using process `\FemtoRV32.$proc$cores/cpu/femtorv32_quark.v:153$337'.
  created $dff cell `$procdff$981' with positive edge clock.
Creating register for signal `\FemtoRV32.$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$285_ADDR' using process `\FemtoRV32.$proc$cores/cpu/femtorv32_quark.v:102$297'.
  created $dff cell `$procdff$982' with positive edge clock.
Creating register for signal `\FemtoRV32.$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$285_DATA' using process `\FemtoRV32.$proc$cores/cpu/femtorv32_quark.v:102$297'.
  created $dff cell `$procdff$983' with positive edge clock.
Creating register for signal `\FemtoRV32.$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$285_EN' using process `\FemtoRV32.$proc$cores/cpu/femtorv32_quark.v:102$297'.
  created $dff cell `$procdff$984' with positive edge clock.
Creating register for signal `\bram.\mem_rdata' using process `\bram.$proc$cores/bram/bram.v:20$257'.
  created $dff cell `$procdff$985' with positive edge clock.
Creating register for signal `\bram.$memwr$\MEM$cores/bram/bram.v:24$253_ADDR' using process `\bram.$proc$cores/bram/bram.v:20$257'.
  created $dff cell `$procdff$986' with positive edge clock.
Creating register for signal `\bram.$memwr$\MEM$cores/bram/bram.v:24$253_DATA' using process `\bram.$proc$cores/bram/bram.v:20$257'.
  created $dff cell `$procdff$987' with positive edge clock.
Creating register for signal `\bram.$memwr$\MEM$cores/bram/bram.v:24$253_EN' using process `\bram.$proc$cores/bram/bram.v:20$257'.
  created $dff cell `$procdff$988' with positive edge clock.
Creating register for signal `\bram.$memwr$\MEM$cores/bram/bram.v:25$254_ADDR' using process `\bram.$proc$cores/bram/bram.v:20$257'.
  created $dff cell `$procdff$989' with positive edge clock.
Creating register for signal `\bram.$memwr$\MEM$cores/bram/bram.v:25$254_DATA' using process `\bram.$proc$cores/bram/bram.v:20$257'.
  created $dff cell `$procdff$990' with positive edge clock.
Creating register for signal `\bram.$memwr$\MEM$cores/bram/bram.v:25$254_EN' using process `\bram.$proc$cores/bram/bram.v:20$257'.
  created $dff cell `$procdff$991' with positive edge clock.
Creating register for signal `\bram.$memwr$\MEM$cores/bram/bram.v:26$255_ADDR' using process `\bram.$proc$cores/bram/bram.v:20$257'.
  created $dff cell `$procdff$992' with positive edge clock.
Creating register for signal `\bram.$memwr$\MEM$cores/bram/bram.v:26$255_DATA' using process `\bram.$proc$cores/bram/bram.v:20$257'.
  created $dff cell `$procdff$993' with positive edge clock.
Creating register for signal `\bram.$memwr$\MEM$cores/bram/bram.v:26$255_EN' using process `\bram.$proc$cores/bram/bram.v:20$257'.
  created $dff cell `$procdff$994' with positive edge clock.
Creating register for signal `\bram.$memwr$\MEM$cores/bram/bram.v:27$256_ADDR' using process `\bram.$proc$cores/bram/bram.v:20$257'.
  created $dff cell `$procdff$995' with positive edge clock.
Creating register for signal `\bram.$memwr$\MEM$cores/bram/bram.v:27$256_DATA' using process `\bram.$proc$cores/bram/bram.v:20$257'.
  created $dff cell `$procdff$996' with positive edge clock.
Creating register for signal `\bram.$memwr$\MEM$cores/bram/bram.v:27$256_EN' using process `\bram.$proc$cores/bram/bram.v:20$257'.
  created $dff cell `$procdff$997' with positive edge clock.
Creating register for signal `$paramod$5ba1b67a19911e09c0ee8c956b41f966dbad00ae\peripheral_uart.\d_out' using process `$paramod$5ba1b67a19911e09c0ee8c956b41f966dbad00ae\peripheral_uart.$proc$cores/uart/perip_uart.v:45$249'.
  created $dff cell `$procdff$998' with positive edge clock.
Creating register for signal `$paramod$5ba1b67a19911e09c0ee8c956b41f966dbad00ae\peripheral_uart.\ledout' using process `$paramod$5ba1b67a19911e09c0ee8c956b41f966dbad00ae\peripheral_uart.$proc$cores/uart/perip_uart.v:38$244'.
  created $dff cell `$procdff$999' with positive edge clock.
Creating register for signal `$paramod$5ba1b67a19911e09c0ee8c956b41f966dbad00ae\peripheral_uart.\d_in_uart' using process `$paramod$5ba1b67a19911e09c0ee8c956b41f966dbad00ae\peripheral_uart.$proc$cores/uart/perip_uart.v:38$244'.
  created $dff cell `$procdff$1000' with positive edge clock.
Creating register for signal `$paramod$5ba1b67a19911e09c0ee8c956b41f966dbad00ae\peripheral_uart.\uart_ctrl' using process `$paramod$5ba1b67a19911e09c0ee8c956b41f966dbad00ae\peripheral_uart.$proc$cores/uart/perip_uart.v:38$244'.
  created $dff cell `$procdff$1001' with positive edge clock.
Creating register for signal `\peripheral_mult.\d_out' using process `\peripheral_mult.$proc$cores/mult/perip_mult.v:56$239'.
  created $dff cell `$procdff$1002' with positive edge clock.
Creating register for signal `\peripheral_mult.\A' using process `\peripheral_mult.$proc$cores/mult/perip_mult.v:38$234'.
  created $dff cell `$procdff$1003' with positive edge clock.
Creating register for signal `\peripheral_mult.\B' using process `\peripheral_mult.$proc$cores/mult/perip_mult.v:38$234'.
  created $dff cell `$procdff$1004' with positive edge clock.
Creating register for signal `\peripheral_mult.\init' using process `\peripheral_mult.$proc$cores/mult/perip_mult.v:38$234'.
  created $dff cell `$procdff$1005' with positive edge clock.

9.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

9.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 7 empty switches in `$paramod$df55812022425781aef872d53070d057b210643d\uart.$proc$cores/uart/uart.v:122$449'.
Removing empty process `$paramod$df55812022425781aef872d53070d057b210643d\uart.$proc$cores/uart/uart.v:122$449'.
Found and cleaned up 10 empty switches in `$paramod$df55812022425781aef872d53070d057b210643d\uart.$proc$cores/uart/uart.v:66$441'.
Removing empty process `$paramod$df55812022425781aef872d53070d057b210643d\uart.$proc$cores/uart/uart.v:66$441'.
Removing empty process `$paramod$df55812022425781aef872d53070d057b210643d\uart.$proc$cores/uart/uart.v:52$440'.
Found and cleaned up 2 empty switches in `$paramod$df55812022425781aef872d53070d057b210643d\uart.$proc$cores/uart/uart.v:34$437'.
Removing empty process `$paramod$df55812022425781aef872d53070d057b210643d\uart.$proc$cores/uart/uart.v:34$437'.
Removing empty process `mult.$proc$cores/mult/mult.v:0$435'.
Found and cleaned up 4 empty switches in `\mult.$proc$cores/mult/mult.v:32$427'.
Removing empty process `mult.$proc$cores/mult/mult.v:32$427'.
Removing empty process `FemtoRV32.$proc$cores/cpu/femtorv32_quark.v:380$425'.
Found and cleaned up 4 empty switches in `\FemtoRV32.$proc$cores/cpu/femtorv32_quark.v:334$412'.
Removing empty process `FemtoRV32.$proc$cores/cpu/femtorv32_quark.v:334$412'.
Found and cleaned up 3 empty switches in `\FemtoRV32.$proc$cores/cpu/femtorv32_quark.v:153$337'.
Removing empty process `FemtoRV32.$proc$cores/cpu/femtorv32_quark.v:153$337'.
Found and cleaned up 2 empty switches in `\FemtoRV32.$proc$cores/cpu/femtorv32_quark.v:102$297'.
Removing empty process `FemtoRV32.$proc$cores/cpu/femtorv32_quark.v:102$297'.
Found and cleaned up 5 empty switches in `\bram.$proc$cores/bram/bram.v:20$257'.
Removing empty process `bram.$proc$cores/bram/bram.v:20$257'.
Removing empty process `$paramod$5ba1b67a19911e09c0ee8c956b41f966dbad00ae\peripheral_uart.$proc$cores/uart/perip_uart.v:21$252'.
Removing empty process `$paramod$5ba1b67a19911e09c0ee8c956b41f966dbad00ae\peripheral_uart.$proc$cores/uart/perip_uart.v:20$251'.
Removing empty process `$paramod$5ba1b67a19911e09c0ee8c956b41f966dbad00ae\peripheral_uart.$proc$cores/uart/perip_uart.v:0$250'.
Found and cleaned up 1 empty switch in `$paramod$5ba1b67a19911e09c0ee8c956b41f966dbad00ae\peripheral_uart.$proc$cores/uart/perip_uart.v:45$249'.
Removing empty process `$paramod$5ba1b67a19911e09c0ee8c956b41f966dbad00ae\peripheral_uart.$proc$cores/uart/perip_uart.v:45$249'.
Removing empty process `$paramod$5ba1b67a19911e09c0ee8c956b41f966dbad00ae\peripheral_uart.$proc$cores/uart/perip_uart.v:38$244'.
Found and cleaned up 1 empty switch in `$paramod$5ba1b67a19911e09c0ee8c956b41f966dbad00ae\peripheral_uart.$proc$cores/uart/perip_uart.v:29$241'.
Removing empty process `$paramod$5ba1b67a19911e09c0ee8c956b41f966dbad00ae\peripheral_uart.$proc$cores/uart/perip_uart.v:29$241'.
Found and cleaned up 3 empty switches in `\peripheral_mult.$proc$cores/mult/perip_mult.v:56$239'.
Removing empty process `peripheral_mult.$proc$cores/mult/perip_mult.v:56$239'.
Found and cleaned up 2 empty switches in `\peripheral_mult.$proc$cores/mult/perip_mult.v:38$234'.
Removing empty process `peripheral_mult.$proc$cores/mult/perip_mult.v:38$234'.
Found and cleaned up 2 empty switches in `\peripheral_mult.$proc$cores/mult/perip_mult.v:20$233'.
Removing empty process `peripheral_mult.$proc$cores/mult/perip_mult.v:20$233'.
Found and cleaned up 1 empty switch in `\SOC.$proc$SOC.v:102$232'.
Removing empty process `SOC.$proc$SOC.v:102$232'.
Found and cleaned up 1 empty switch in `\SOC.$proc$SOC.v:89$231'.
Removing empty process `SOC.$proc$SOC.v:89$231'.
Cleaned up 48 empty switches.

9.5.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$df55812022425781aef872d53070d057b210643d\uart.
<suppressed ~16 debug messages>
Optimizing module mult.
<suppressed ~14 debug messages>
Optimizing module FemtoRV32.
<suppressed ~21 debug messages>
Optimizing module bram.
Optimizing module $paramod$5ba1b67a19911e09c0ee8c956b41f966dbad00ae\peripheral_uart.
Optimizing module peripheral_mult.
Optimizing module SOC.

9.6. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod$df55812022425781aef872d53070d057b210643d\uart.
Deleting now unused module mult.
Deleting now unused module FemtoRV32.
Deleting now unused module bram.
Deleting now unused module $paramod$5ba1b67a19911e09c0ee8c956b41f966dbad00ae\peripheral_uart.
Deleting now unused module peripheral_mult.
<suppressed ~6 debug messages>

9.7. Executing TRIBUF pass.

9.8. Executing DEMINOUT pass (demote inout ports to input or output).

9.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOC.
<suppressed ~38 debug messages>

9.10. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOC..
Removed 21 unused cells and 344 unused wires.
<suppressed ~28 debug messages>

9.11. Executing CHECK pass (checking for obvious problems).
Checking module SOC...
Warning: Wire SOC.\dpram_dout [31] is used but has no driver.
Warning: Wire SOC.\dpram_dout [30] is used but has no driver.
Warning: Wire SOC.\dpram_dout [29] is used but has no driver.
Warning: Wire SOC.\dpram_dout [28] is used but has no driver.
Warning: Wire SOC.\dpram_dout [27] is used but has no driver.
Warning: Wire SOC.\dpram_dout [26] is used but has no driver.
Warning: Wire SOC.\dpram_dout [25] is used but has no driver.
Warning: Wire SOC.\dpram_dout [24] is used but has no driver.
Warning: Wire SOC.\dpram_dout [23] is used but has no driver.
Warning: Wire SOC.\dpram_dout [22] is used but has no driver.
Warning: Wire SOC.\dpram_dout [21] is used but has no driver.
Warning: Wire SOC.\dpram_dout [20] is used but has no driver.
Warning: Wire SOC.\dpram_dout [19] is used but has no driver.
Warning: Wire SOC.\dpram_dout [18] is used but has no driver.
Warning: Wire SOC.\dpram_dout [17] is used but has no driver.
Warning: Wire SOC.\dpram_dout [16] is used but has no driver.
Warning: Wire SOC.\dpram_dout [15] is used but has no driver.
Warning: Wire SOC.\dpram_dout [14] is used but has no driver.
Warning: Wire SOC.\dpram_dout [13] is used but has no driver.
Warning: Wire SOC.\dpram_dout [12] is used but has no driver.
Warning: Wire SOC.\dpram_dout [11] is used but has no driver.
Warning: Wire SOC.\dpram_dout [10] is used but has no driver.
Warning: Wire SOC.\dpram_dout [9] is used but has no driver.
Warning: Wire SOC.\dpram_dout [8] is used but has no driver.
Warning: Wire SOC.\dpram_dout [7] is used but has no driver.
Warning: Wire SOC.\dpram_dout [6] is used but has no driver.
Warning: Wire SOC.\dpram_dout [5] is used but has no driver.
Warning: Wire SOC.\dpram_dout [4] is used but has no driver.
Warning: Wire SOC.\dpram_dout [3] is used but has no driver.
Warning: Wire SOC.\dpram_dout [2] is used but has no driver.
Warning: Wire SOC.\dpram_dout [1] is used but has no driver.
Warning: Wire SOC.\dpram_dout [0] is used but has no driver.
Warning: Wire SOC.\gpio_dout [31] is used but has no driver.
Warning: Wire SOC.\gpio_dout [30] is used but has no driver.
Warning: Wire SOC.\gpio_dout [29] is used but has no driver.
Warning: Wire SOC.\gpio_dout [28] is used but has no driver.
Warning: Wire SOC.\gpio_dout [27] is used but has no driver.
Warning: Wire SOC.\gpio_dout [26] is used but has no driver.
Warning: Wire SOC.\gpio_dout [25] is used but has no driver.
Warning: Wire SOC.\gpio_dout [24] is used but has no driver.
Warning: Wire SOC.\gpio_dout [23] is used but has no driver.
Warning: Wire SOC.\gpio_dout [22] is used but has no driver.
Warning: Wire SOC.\gpio_dout [21] is used but has no driver.
Warning: Wire SOC.\gpio_dout [20] is used but has no driver.
Warning: Wire SOC.\gpio_dout [19] is used but has no driver.
Warning: Wire SOC.\gpio_dout [18] is used but has no driver.
Warning: Wire SOC.\gpio_dout [17] is used but has no driver.
Warning: Wire SOC.\gpio_dout [16] is used but has no driver.
Warning: Wire SOC.\gpio_dout [15] is used but has no driver.
Warning: Wire SOC.\gpio_dout [14] is used but has no driver.
Warning: Wire SOC.\gpio_dout [13] is used but has no driver.
Warning: Wire SOC.\gpio_dout [12] is used but has no driver.
Warning: Wire SOC.\gpio_dout [11] is used but has no driver.
Warning: Wire SOC.\gpio_dout [10] is used but has no driver.
Warning: Wire SOC.\gpio_dout [9] is used but has no driver.
Warning: Wire SOC.\gpio_dout [8] is used but has no driver.
Warning: Wire SOC.\gpio_dout [7] is used but has no driver.
Warning: Wire SOC.\gpio_dout [6] is used but has no driver.
Warning: Wire SOC.\gpio_dout [5] is used but has no driver.
Warning: Wire SOC.\gpio_dout [4] is used but has no driver.
Warning: Wire SOC.\gpio_dout [3] is used but has no driver.
Warning: Wire SOC.\gpio_dout [2] is used but has no driver.
Warning: Wire SOC.\gpio_dout [1] is used but has no driver.
Warning: Wire SOC.\gpio_dout [0] is used but has no driver.
Warning: Wire SOC.\div_dout [31] is used but has no driver.
Warning: Wire SOC.\div_dout [30] is used but has no driver.
Warning: Wire SOC.\div_dout [29] is used but has no driver.
Warning: Wire SOC.\div_dout [28] is used but has no driver.
Warning: Wire SOC.\div_dout [27] is used but has no driver.
Warning: Wire SOC.\div_dout [26] is used but has no driver.
Warning: Wire SOC.\div_dout [25] is used but has no driver.
Warning: Wire SOC.\div_dout [24] is used but has no driver.
Warning: Wire SOC.\div_dout [23] is used but has no driver.
Warning: Wire SOC.\div_dout [22] is used but has no driver.
Warning: Wire SOC.\div_dout [21] is used but has no driver.
Warning: Wire SOC.\div_dout [20] is used but has no driver.
Warning: Wire SOC.\div_dout [19] is used but has no driver.
Warning: Wire SOC.\div_dout [18] is used but has no driver.
Warning: Wire SOC.\div_dout [17] is used but has no driver.
Warning: Wire SOC.\div_dout [16] is used but has no driver.
Warning: Wire SOC.\div_dout [15] is used but has no driver.
Warning: Wire SOC.\div_dout [14] is used but has no driver.
Warning: Wire SOC.\div_dout [13] is used but has no driver.
Warning: Wire SOC.\div_dout [12] is used but has no driver.
Warning: Wire SOC.\div_dout [11] is used but has no driver.
Warning: Wire SOC.\div_dout [10] is used but has no driver.
Warning: Wire SOC.\div_dout [9] is used but has no driver.
Warning: Wire SOC.\div_dout [8] is used but has no driver.
Warning: Wire SOC.\div_dout [7] is used but has no driver.
Warning: Wire SOC.\div_dout [6] is used but has no driver.
Warning: Wire SOC.\div_dout [5] is used but has no driver.
Warning: Wire SOC.\div_dout [4] is used but has no driver.
Warning: Wire SOC.\div_dout [3] is used but has no driver.
Warning: Wire SOC.\div_dout [2] is used but has no driver.
Warning: Wire SOC.\div_dout [1] is used but has no driver.
Warning: Wire SOC.\div_dout [0] is used but has no driver.
Warning: Wire SOC.\bin2bcd_dout [31] is used but has no driver.
Warning: Wire SOC.\bin2bcd_dout [30] is used but has no driver.
Warning: Wire SOC.\bin2bcd_dout [29] is used but has no driver.
Warning: Wire SOC.\bin2bcd_dout [28] is used but has no driver.
Warning: Wire SOC.\bin2bcd_dout [27] is used but has no driver.
Warning: Wire SOC.\bin2bcd_dout [26] is used but has no driver.
Warning: Wire SOC.\bin2bcd_dout [25] is used but has no driver.
Warning: Wire SOC.\bin2bcd_dout [24] is used but has no driver.
Warning: Wire SOC.\bin2bcd_dout [23] is used but has no driver.
Warning: Wire SOC.\bin2bcd_dout [22] is used but has no driver.
Warning: Wire SOC.\bin2bcd_dout [21] is used but has no driver.
Warning: Wire SOC.\bin2bcd_dout [20] is used but has no driver.
Warning: Wire SOC.\bin2bcd_dout [19] is used but has no driver.
Warning: Wire SOC.\bin2bcd_dout [18] is used but has no driver.
Warning: Wire SOC.\bin2bcd_dout [17] is used but has no driver.
Warning: Wire SOC.\bin2bcd_dout [16] is used but has no driver.
Warning: Wire SOC.\bin2bcd_dout [15] is used but has no driver.
Warning: Wire SOC.\bin2bcd_dout [14] is used but has no driver.
Warning: Wire SOC.\bin2bcd_dout [13] is used but has no driver.
Warning: Wire SOC.\bin2bcd_dout [12] is used but has no driver.
Warning: Wire SOC.\bin2bcd_dout [11] is used but has no driver.
Warning: Wire SOC.\bin2bcd_dout [10] is used but has no driver.
Warning: Wire SOC.\bin2bcd_dout [9] is used but has no driver.
Warning: Wire SOC.\bin2bcd_dout [8] is used but has no driver.
Warning: Wire SOC.\bin2bcd_dout [7] is used but has no driver.
Warning: Wire SOC.\bin2bcd_dout [6] is used but has no driver.
Warning: Wire SOC.\bin2bcd_dout [5] is used but has no driver.
Warning: Wire SOC.\bin2bcd_dout [4] is used but has no driver.
Warning: Wire SOC.\bin2bcd_dout [3] is used but has no driver.
Warning: Wire SOC.\bin2bcd_dout [2] is used but has no driver.
Warning: Wire SOC.\bin2bcd_dout [1] is used but has no driver.
Warning: Wire SOC.\bin2bcd_dout [0] is used but has no driver.
Found and reported 128 problems.

9.12. Executing OPT pass (performing simple optimizations).

9.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOC.

9.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOC'.
<suppressed ~63 debug messages>
Removed a total of 21 cells.

9.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SOC..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $flatten\CPU.$procmux$726: \CPU.state -> { 3'100 \CPU.state [0] }
      Replacing known input bits on port A of cell $flatten\per_uart.\uart0.$procmux$582: \per_uart.uart0.rx_busy -> 1'1
      Replacing known input bits on port A of cell $flatten\per_uart.\uart0.$procmux$578: \per_uart.uart0.rx_busy -> 1'1
      Replacing known input bits on port A of cell $flatten\per_uart.\uart0.$procmux$575: \per_uart.uart0.rx_busy -> 1'1
      Replacing known input bits on port B of cell $flatten\per_uart.\uart0.$procmux$585: \per_uart.uart0.rx_busy -> 1'0
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\CPU.$procmux$790.
    dead port 2/2 on $mux $flatten\CPU.$procmux$796.
    dead port 2/2 on $mux $flatten\CPU.$procmux$802.
    dead port 2/2 on $mux $flatten\mult1.$procmux$864.
    dead port 2/2 on $mux $flatten\mult1.$procmux$867.
    dead port 2/2 on $mux $flatten\mult1.$procmux$873.
    dead port 2/2 on $mux $flatten\mult1.$procmux$882.
    dead port 2/2 on $mux $flatten\mult1.$procmux$888.
    dead port 2/2 on $mux $flatten\mult1.$procmux$894.
    dead port 2/2 on $mux $flatten\mult1.$procmux$913.
    dead port 2/2 on $mux $flatten\mult1.\mult1.$procmux$666.
    dead port 2/2 on $mux $flatten\mult1.\mult1.$procmux$675.
    dead port 2/2 on $mux $flatten\mult1.\mult1.$procmux$686.
Removed 13 multiplexer ports.
<suppressed ~81 debug messages>

9.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \SOC.
    Consolidated identical input bits for $mux cell $flatten\CPU.$procmux$788:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$flatten\CPU.$procmux$788_Y
      New ports: A=1'0, B=1'1, Y=$flatten\CPU.$procmux$788_Y [0]
      New connections: $flatten\CPU.$procmux$788_Y [31:1] = { $flatten\CPU.$procmux$788_Y [0] $flatten\CPU.$procmux$788_Y [0] $flatten\CPU.$procmux$788_Y [0] $flatten\CPU.$procmux$788_Y [0] $flatten\CPU.$procmux$788_Y [0] $flatten\CPU.$procmux$788_Y [0] $flatten\CPU.$procmux$788_Y [0] $flatten\CPU.$procmux$788_Y [0] $flatten\CPU.$procmux$788_Y [0] $flatten\CPU.$procmux$788_Y [0] $flatten\CPU.$procmux$788_Y [0] $flatten\CPU.$procmux$788_Y [0] $flatten\CPU.$procmux$788_Y [0] $flatten\CPU.$procmux$788_Y [0] $flatten\CPU.$procmux$788_Y [0] $flatten\CPU.$procmux$788_Y [0] $flatten\CPU.$procmux$788_Y [0] $flatten\CPU.$procmux$788_Y [0] $flatten\CPU.$procmux$788_Y [0] $flatten\CPU.$procmux$788_Y [0] $flatten\CPU.$procmux$788_Y [0] $flatten\CPU.$procmux$788_Y [0] $flatten\CPU.$procmux$788_Y [0] $flatten\CPU.$procmux$788_Y [0] $flatten\CPU.$procmux$788_Y [0] $flatten\CPU.$procmux$788_Y [0] $flatten\CPU.$procmux$788_Y [0] $flatten\CPU.$procmux$788_Y [0] $flatten\CPU.$procmux$788_Y [0] $flatten\CPU.$procmux$788_Y [0] $flatten\CPU.$procmux$788_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\RAM.$procmux$814:
      Old ports: A=0, B=32'11111111000000000000000000000000, Y=$flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:27$256_EN[31:0]$269
      New ports: A=1'0, B=1'1, Y=$flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:27$256_EN[31:0]$269 [24]
      New connections: { $flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:27$256_EN[31:0]$269 [31:25] $flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:27$256_EN[31:0]$269 [23:0] } = { $flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:27$256_EN[31:0]$269 [24] $flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:27$256_EN[31:0]$269 [24] $flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:27$256_EN[31:0]$269 [24] $flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:27$256_EN[31:0]$269 [24] $flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:27$256_EN[31:0]$269 [24] $flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:27$256_EN[31:0]$269 [24] $flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:27$256_EN[31:0]$269 [24] 24'000000000000000000000000 }
    Consolidated identical input bits for $mux cell $flatten\RAM.$procmux$823:
      Old ports: A=0, B=16711680, Y=$flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:26$255_EN[31:0]$266
      New ports: A=1'0, B=1'1, Y=$flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:26$255_EN[31:0]$266 [16]
      New connections: { $flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:26$255_EN[31:0]$266 [31:17] $flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:26$255_EN[31:0]$266 [15:0] } = { 8'00000000 $flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:26$255_EN[31:0]$266 [16] $flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:26$255_EN[31:0]$266 [16] $flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:26$255_EN[31:0]$266 [16] $flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:26$255_EN[31:0]$266 [16] $flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:26$255_EN[31:0]$266 [16] $flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:26$255_EN[31:0]$266 [16] $flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:26$255_EN[31:0]$266 [16] 16'0000000000000000 }
    Consolidated identical input bits for $mux cell $flatten\RAM.$procmux$832:
      Old ports: A=0, B=65280, Y=$flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:25$254_EN[31:0]$263
      New ports: A=1'0, B=1'1, Y=$flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:25$254_EN[31:0]$263 [8]
      New connections: { $flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:25$254_EN[31:0]$263 [31:9] $flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:25$254_EN[31:0]$263 [7:0] } = { 16'0000000000000000 $flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:25$254_EN[31:0]$263 [8] $flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:25$254_EN[31:0]$263 [8] $flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:25$254_EN[31:0]$263 [8] $flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:25$254_EN[31:0]$263 [8] $flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:25$254_EN[31:0]$263 [8] $flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:25$254_EN[31:0]$263 [8] $flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:25$254_EN[31:0]$263 [8] 8'00000000 }
    Consolidated identical input bits for $mux cell $flatten\RAM.$procmux$841:
      Old ports: A=0, B=255, Y=$flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:24$253_EN[31:0]$260
      New ports: A=1'0, B=1'1, Y=$flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:24$253_EN[31:0]$260 [0]
      New connections: $flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:24$253_EN[31:0]$260 [31:1] = { 24'000000000000000000000000 $flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:24$253_EN[31:0]$260 [0] $flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:24$253_EN[31:0]$260 [0] $flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:24$253_EN[31:0]$260 [0] $flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:24$253_EN[31:0]$260 [0] $flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:24$253_EN[31:0]$260 [0] $flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:24$253_EN[31:0]$260 [0] $flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:24$253_EN[31:0]$260 [0] }
    New ctrl vector for $pmux cell $flatten\mult1.\mult1.$procmux$698: { $auto$opt_reduce.cc:137:opt_pmux$1018 $flatten\mult1.\mult1.$procmux$691_CMP }
    New ctrl vector for $pmux cell $flatten\mult1.\mult1.$procmux$703: { $auto$opt_reduce.cc:137:opt_pmux$1020 $flatten\mult1.\mult1.$procmux$690_CMP }
  Optimizing cells in module \SOC.
    Consolidated identical input bits for $mux cell $flatten\CPU.$procmux$805:
      Old ports: A=0, B=$flatten\CPU.$2$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$285_EN[31:0]$307, Y=$flatten\CPU.$0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$285_EN[31:0]$300
      New ports: A=1'0, B=$flatten\CPU.$procmux$788_Y [0], Y=$flatten\CPU.$0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$285_EN[31:0]$300 [0]
      New connections: $flatten\CPU.$0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$285_EN[31:0]$300 [31:1] = { $flatten\CPU.$0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$285_EN[31:0]$300 [0] $flatten\CPU.$0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$285_EN[31:0]$300 [0] $flatten\CPU.$0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$285_EN[31:0]$300 [0] $flatten\CPU.$0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$285_EN[31:0]$300 [0] $flatten\CPU.$0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$285_EN[31:0]$300 [0] $flatten\CPU.$0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$285_EN[31:0]$300 [0] $flatten\CPU.$0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$285_EN[31:0]$300 [0] $flatten\CPU.$0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$285_EN[31:0]$300 [0] $flatten\CPU.$0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$285_EN[31:0]$300 [0] $flatten\CPU.$0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$285_EN[31:0]$300 [0] $flatten\CPU.$0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$285_EN[31:0]$300 [0] $flatten\CPU.$0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$285_EN[31:0]$300 [0] $flatten\CPU.$0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$285_EN[31:0]$300 [0] $flatten\CPU.$0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$285_EN[31:0]$300 [0] $flatten\CPU.$0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$285_EN[31:0]$300 [0] $flatten\CPU.$0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$285_EN[31:0]$300 [0] $flatten\CPU.$0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$285_EN[31:0]$300 [0] $flatten\CPU.$0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$285_EN[31:0]$300 [0] $flatten\CPU.$0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$285_EN[31:0]$300 [0] $flatten\CPU.$0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$285_EN[31:0]$300 [0] $flatten\CPU.$0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$285_EN[31:0]$300 [0] $flatten\CPU.$0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$285_EN[31:0]$300 [0] $flatten\CPU.$0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$285_EN[31:0]$300 [0] $flatten\CPU.$0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$285_EN[31:0]$300 [0] $flatten\CPU.$0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$285_EN[31:0]$300 [0] $flatten\CPU.$0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$285_EN[31:0]$300 [0] $flatten\CPU.$0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$285_EN[31:0]$300 [0] $flatten\CPU.$0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$285_EN[31:0]$300 [0] $flatten\CPU.$0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$285_EN[31:0]$300 [0] $flatten\CPU.$0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$285_EN[31:0]$300 [0] $flatten\CPU.$0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$285_EN[31:0]$300 [0] }
  Optimizing cells in module \SOC.
Performed a total of 8 changes.

9.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOC'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

9.12.6. Executing OPT_DFF pass (perform DFF optimizations).

9.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOC..
Removed 0 unused cells and 36 unused wires.
<suppressed ~1 debug messages>

9.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOC.

9.12.9. Rerunning OPT passes. (Maybe there is more to do..)

9.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SOC..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~82 debug messages>

9.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \SOC.
Performed a total of 0 changes.

9.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOC'.
Removed a total of 0 cells.

9.12.13. Executing OPT_DFF pass (perform DFF optimizations).

9.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOC..

9.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOC.

9.12.16. Finished OPT passes. (There is nothing left to do.)

9.13. Executing FSM pass (extract and optimize FSM).

9.13.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking SOC.mult1.mult1.state as FSM state register:
    Circuit seems to be self-resetting.

9.13.2. Executing FSM_EXTRACT pass (extracting FSM from design).

9.13.3. Executing FSM_OPT pass (simple optimizations of FSMs).

9.13.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOC..

9.13.5. Executing FSM_OPT pass (simple optimizations of FSMs).

9.13.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

9.13.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

9.13.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

9.14. Executing OPT pass (performing simple optimizations).

9.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOC.

9.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOC'.
Removed a total of 0 cells.

9.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SOC..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~82 debug messages>

9.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \SOC.
Performed a total of 0 changes.

9.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOC'.
Removed a total of 0 cells.

9.14.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\per_uart.\uart0.$procdff$949 ($dff) from module SOC (D = $flatten\per_uart.\uart0.$sub$cores/uart/uart.v:39$438_Y [15:0], Q = \per_uart.uart0.enable16_counter, rval = 16'0000000000001100).
Adding EN signal on $flatten\per_uart.\uart0.$procdff$946 ($dff) from module SOC (D = { \per_uart.uart0.uart_rxd2 \per_uart.uart0.rxd_reg [7:1] }, Q = \per_uart.uart0.rxd_reg).
Adding SRST signal on $flatten\per_uart.\uart0.$procdff$945 ($dff) from module SOC (D = $flatten\per_uart.\uart0.$procmux$559_Y, Q = \per_uart.uart0.rx_bitcount, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$1033 ($sdff) from module SOC (D = $flatten\per_uart.\uart0.$procmux$557_Y, Q = \per_uart.uart0.rx_bitcount).
Adding SRST signal on $flatten\per_uart.\uart0.$procdff$944 ($dff) from module SOC (D = $flatten\per_uart.\uart0.$procmux$569_Y, Q = \per_uart.uart0.rx_count16, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$1041 ($sdff) from module SOC (D = $flatten\per_uart.\uart0.$procmux$567_Y, Q = \per_uart.uart0.rx_count16).
Adding SRST signal on $flatten\per_uart.\uart0.$procdff$943 ($dff) from module SOC (D = $flatten\per_uart.\uart0.$procmux$589_Y, Q = \per_uart.uart0.rx_busy, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$1047 ($sdff) from module SOC (D = $flatten\per_uart.\uart0.$procmux$587_Y, Q = \per_uart.uart0.rx_busy).
Adding SRST signal on $flatten\per_uart.\uart0.$procdff$942 ($dff) from module SOC (D = $flatten\per_uart.\uart0.$procmux$610_Y, Q = \per_uart.uart0.rx_avail, rval = 1'0).
Adding SRST signal on $flatten\per_uart.\uart0.$procdff$941 ($dff) from module SOC (D = $flatten\per_uart.\uart0.$procmux$631_Y, Q = \per_uart.uart0.rx_error, rval = 1'0).
Adding EN signal on $flatten\per_uart.\uart0.$procdff$940 ($dff) from module SOC (D = \per_uart.uart0.rxd_reg, Q = \per_uart.uart0.rx_data).
Adding EN signal on $flatten\per_uart.\uart0.$procdff$939 ($dff) from module SOC (D = $flatten\per_uart.\uart0.$procmux$472_Y, Q = \per_uart.uart0.txd_reg).
Adding SRST signal on $flatten\per_uart.\uart0.$procdff$938 ($dff) from module SOC (D = $flatten\per_uart.\uart0.$procmux$479_Y, Q = \per_uart.uart0.tx_count16, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$1057 ($sdff) from module SOC (D = $flatten\per_uart.\uart0.$procmux$479_Y, Q = \per_uart.uart0.tx_count16).
Adding EN signal on $flatten\per_uart.\uart0.$procdff$937 ($dff) from module SOC (D = $flatten\per_uart.\uart0.$procmux$497_Y, Q = \per_uart.uart0.tx_bitcount).
Adding SRST signal on $flatten\per_uart.\uart0.$procdff$936 ($dff) from module SOC (D = $flatten\per_uart.\uart0.$procmux$513_Y, Q = \per_uart.uart0.uart_txd, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$1062 ($sdff) from module SOC (D = $flatten\per_uart.\uart0.$procmux$509_Y, Q = \per_uart.uart0.uart_txd).
Adding SRST signal on $flatten\per_uart.\uart0.$procdff$935 ($dff) from module SOC (D = $flatten\per_uart.\uart0.$procmux$531_Y, Q = \per_uart.uart0.tx_busy, rval = 1'0).
Adding EN signal on $flatten\per_uart.$procdff$1001 ($dff) from module SOC (D = { \CPU.rs2 [7:3] \CPU.rs2 [1:0] }, Q = { \per_uart.uart_ctrl [7:3] \per_uart.uart_ctrl [1:0] }).
Adding EN signal on $flatten\per_uart.$procdff$1000 ($dff) from module SOC (D = \CPU.rs2 [7:0], Q = \per_uart.d_in_uart).
Adding EN signal on $flatten\mult1.\mult1.$procdff$973 ($dff) from module SOC (D = $flatten\mult1.\mult1.$0\count[4:0], Q = \mult1.mult1.count).
Adding EN signal on $flatten\mult1.\mult1.$procdff$965 ($adff) from module SOC (D = $flatten\mult1.\mult1.$0\done[0:0], Q = \mult1.mult1.done).
Adding EN signal on $flatten\mult1.\mult1.$procdff$962 ($adff) from module SOC (D = $flatten\mult1.\mult1.$0\result[31:0], Q = \mult1.mult1.result).
Adding EN signal on $flatten\mult1.\mult1.$procdff$959 ($dff) from module SOC (D = $flatten\mult1.\mult1.$0\B[15:0], Q = \mult1.mult1.B).
Adding EN signal on $flatten\mult1.\mult1.$procdff$954 ($dff) from module SOC (D = $flatten\mult1.\mult1.$0\A[15:0], Q = \mult1.mult1.A).
Adding SRST signal on $flatten\mult1.$procdff$1005 ($dff) from module SOC (D = $flatten\mult1.$2\init[0:0], Q = \mult1.init, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$1093 ($sdff) from module SOC (D = \CPU.rs2 [0], Q = \mult1.init).
Adding SRST signal on $flatten\mult1.$procdff$1004 ($dff) from module SOC (D = $flatten\mult1.$2\B[15:0], Q = \mult1.B, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$1097 ($sdff) from module SOC (D = { \RAM.mem_wdata [15:8] \CPU.rs2 [7:0] }, Q = \mult1.B).
Adding SRST signal on $flatten\mult1.$procdff$1003 ($dff) from module SOC (D = $flatten\mult1.$2\A[15:0], Q = \mult1.A, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$1101 ($sdff) from module SOC (D = { \RAM.mem_wdata [15:8] \CPU.rs2 [7:0] }, Q = \mult1.A).
Adding SRST signal on $flatten\mult1.$procdff$1002 ($dff) from module SOC (D = $flatten\mult1.$2\d_out[31:0], Q = \mult1.d_out, rval = 0).
Adding EN signal on $auto$ff.cc:266:slice$1105 ($sdff) from module SOC (D = $flatten\mult1.$3\d_out[31:0], Q = \mult1.d_out).
Adding EN signal on $flatten\RAM.$procdff$985 ($dff) from module SOC (D = $flatten\RAM.$memrd$\MEM$cores/bram/bram.v:22$270_DATA, Q = \RAM.mem_rdata).
Adding EN signal on $flatten\CPU.$procdff$981 ($dff) from module SOC (D = $flatten\CPU.$0\aluShamt[4:0], Q = \CPU.aluShamt).
Adding EN signal on $flatten\CPU.$procdff$980 ($dff) from module SOC (D = $flatten\CPU.$0\aluReg[31:0], Q = \CPU.aluReg).
Adding SRST signal on $flatten\CPU.$procdff$979 ($dff) from module SOC (D = $flatten\CPU.$procmux$728_Y, Q = \CPU.state, rval = 4'1000).
Adding EN signal on $auto$ff.cc:266:slice$1126 ($sdff) from module SOC (D = $flatten\CPU.$procmux$728_Y [0], Q = \CPU.state [0]).
Adding EN signal on $flatten\CPU.$procdff$978 ($dff) from module SOC (D = \CPU.mem_rdata [31:2], Q = \CPU.instr).
Adding SRST signal on $flatten\CPU.$procdff$977 ($dff) from module SOC (D = $flatten\CPU.$procmux$749_Y, Q = \CPU.PC, rval = 24'000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$1134 ($sdff) from module SOC (D = $flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y, Q = \CPU.PC).
Adding EN signal on $flatten\CPU.$procdff$976 ($dff) from module SOC (D = $flatten\CPU.$memrd$\registerFile$cores/cpu/femtorv32_quark.v:347$416_DATA, Q = \CPU.rs2).
Adding EN signal on $flatten\CPU.$procdff$975 ($dff) from module SOC (D = $flatten\CPU.$memrd$\registerFile$cores/cpu/femtorv32_quark.v:346$415_DATA, Q = \CPU.rs1).

9.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOC..
Removed 55 unused cells and 55 unused wires.
<suppressed ~56 debug messages>

9.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOC.
<suppressed ~9 debug messages>

9.14.9. Rerunning OPT passes. (Maybe there is more to do..)

9.14.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SOC..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~71 debug messages>

9.14.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \SOC.
Performed a total of 0 changes.

9.14.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOC'.
<suppressed ~27 debug messages>
Removed a total of 9 cells.

9.14.13. Executing OPT_DFF pass (perform DFF optimizations).

9.14.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOC..
Removed 0 unused cells and 9 unused wires.
<suppressed ~1 debug messages>

9.14.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOC.

9.14.16. Rerunning OPT passes. (Maybe there is more to do..)

9.14.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SOC..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~71 debug messages>

9.14.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \SOC.
Performed a total of 0 changes.

9.14.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOC'.
Removed a total of 0 cells.

9.14.20. Executing OPT_DFF pass (perform DFF optimizations).

9.14.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOC..

9.14.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOC.

9.14.23. Finished OPT passes. (There is nothing left to do.)

9.15. Executing WREDUCE pass (reducing word size of cells).
Removed top 18 address bits (of 30) from memory init port SOC.$flatten\RAM.$auto$proc_memwr.cc:45:proc_memwr$1007 (RAM.MEM).
Removed top 18 address bits (of 30) from memory init port SOC.$flatten\RAM.$auto$proc_memwr.cc:45:proc_memwr$1008 (RAM.MEM).
Removed top 18 address bits (of 30) from memory init port SOC.$flatten\RAM.$auto$proc_memwr.cc:45:proc_memwr$1009 (RAM.MEM).
Removed top 18 address bits (of 30) from memory init port SOC.$flatten\RAM.$auto$proc_memwr.cc:45:proc_memwr$1010 (RAM.MEM).
Removed top 20 address bits (of 32) from memory init port SOC.$flatten\RAM.$meminit$\MEM$cores/bram/bram.v:0$283 (RAM.MEM).
Removed top 18 address bits (of 30) from memory read port SOC.$flatten\RAM.$memrd$\MEM$cores/bram/bram.v:22$270 (RAM.MEM).
Removed top 6 bits (of 7) from port B of cell SOC.$procmux$920_CMP0 ($eq).
Removed top 5 bits (of 7) from port B of cell SOC.$procmux$921_CMP0 ($eq).
Removed top 4 bits (of 7) from port B of cell SOC.$procmux$922_CMP0 ($eq).
Removed top 3 bits (of 7) from port B of cell SOC.$procmux$923_CMP0 ($eq).
Removed top 2 bits (of 7) from port B of cell SOC.$procmux$924_CMP0 ($eq).
Removed top 1 bits (of 7) from port B of cell SOC.$procmux$925_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell SOC.$procmux$929_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell SOC.$procmux$930_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell SOC.$procmux$931_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell SOC.$procmux$932_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell SOC.$procmux$933_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell SOC.$procmux$934_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell SOC.$flatten\CPU.$add$cores/cpu/femtorv32_quark.v:380$426 ($add).
Removed top 28 bits (of 32) from mux cell SOC.$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:357$419 ($mux).
Removed top 2 bits (of 4) from mux cell SOC.$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:285$393 ($mux).
Removed top 1 bits (of 2) from port B of cell SOC.$flatten\CPU.$eq$cores/cpu/femtorv32_quark.v:247$380 ($eq).
Removed top 8 bits (of 32) from mux cell SOC.$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:230$375 ($mux).
Removed top 8 bits (of 32) from mux cell SOC.$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:229$371 ($mux).
Removed top 19 bits (of 24) from mux cell SOC.$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:212$361 ($mux).
Removed top 29 bits (of 32) from port B of cell SOC.$flatten\CPU.$add$cores/cpu/femtorv32_quark.v:200$357 ($add).
Removed top 8 bits (of 32) from port Y of cell SOC.$flatten\CPU.$add$cores/cpu/femtorv32_quark.v:200$357 ($add).
Removed top 31 bits (of 32) from port B of cell SOC.$flatten\CPU.$sub$cores/cpu/femtorv32_quark.v:174$339 ($sub).
Removed top 27 bits (of 32) from port Y of cell SOC.$flatten\CPU.$sub$cores/cpu/femtorv32_quark.v:174$339 ($sub).
Removed top 31 bits (of 32) from mux cell SOC.$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:145$323 ($mux).
Removed top 31 bits (of 32) from mux cell SOC.$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:144$321 ($mux).
Removed top 32 bits (of 33) from port B of cell SOC.$flatten\CPU.$add$cores/cpu/femtorv32_quark.v:131$314 ($add).
Removed top 1 bits (of 33) from port B of cell SOC.$flatten\CPU.$add$cores/cpu/femtorv32_quark.v:131$313 ($add).
Removed top 2 bits (of 5) from port B of cell SOC.$flatten\CPU.$eq$cores/cpu/femtorv32_quark.v:88$294 ($eq).
Removed top 1 bits (of 5) from port B of cell SOC.$flatten\CPU.$eq$cores/cpu/femtorv32_quark.v:87$293 ($eq).
Removed top 1 bits (of 5) from port B of cell SOC.$flatten\CPU.$eq$cores/cpu/femtorv32_quark.v:83$290 ($eq).
Removed top 1 bits (of 5) from port B of cell SOC.$flatten\CPU.$eq$cores/cpu/femtorv32_quark.v:82$289 ($eq).
Removed top 2 bits (of 5) from port B of cell SOC.$flatten\CPU.$eq$cores/cpu/femtorv32_quark.v:81$288 ($eq).
Removed top 7 bits (of 8) from port A of cell SOC.$flatten\CPU.$shl$cores/cpu/femtorv32_quark.v:68$286 ($shl).
Removed top 18 bits (of 30) from mux cell SOC.$flatten\RAM.$procmux$847 ($mux).
Removed top 18 bits (of 30) from mux cell SOC.$flatten\RAM.$procmux$838 ($mux).
Removed top 18 bits (of 30) from mux cell SOC.$flatten\RAM.$procmux$829 ($mux).
Removed top 18 bits (of 30) from mux cell SOC.$flatten\RAM.$procmux$820 ($mux).
Removed top 31 bits (of 32) from port B of cell SOC.$flatten\per_uart.\uart0.$sub$cores/uart/uart.v:39$438 ($sub).
Removed top 16 bits (of 32) from port Y of cell SOC.$flatten\per_uart.\uart0.$sub$cores/uart/uart.v:39$438 ($sub).
Removed top 31 bits (of 32) from port B of cell SOC.$flatten\per_uart.\uart0.$add$cores/uart/uart.v:88$444 ($add).
Removed top 28 bits (of 32) from port Y of cell SOC.$flatten\per_uart.\uart0.$add$cores/uart/uart.v:88$444 ($add).
Removed top 31 bits (of 32) from port B of cell SOC.$flatten\per_uart.\uart0.$add$cores/uart/uart.v:91$446 ($add).
Removed top 28 bits (of 32) from port Y of cell SOC.$flatten\per_uart.\uart0.$add$cores/uart/uart.v:91$446 ($add).
Removed top 31 bits (of 32) from port B of cell SOC.$flatten\per_uart.\uart0.$add$cores/uart/uart.v:137$452 ($add).
Removed top 28 bits (of 32) from port Y of cell SOC.$flatten\per_uart.\uart0.$add$cores/uart/uart.v:137$452 ($add).
Removed top 31 bits (of 32) from port B of cell SOC.$flatten\per_uart.\uart0.$add$cores/uart/uart.v:140$455 ($add).
Removed top 28 bits (of 32) from port Y of cell SOC.$flatten\per_uart.\uart0.$add$cores/uart/uart.v:140$455 ($add).
Removed top 1 bits (of 2) from port B of cell SOC.$flatten\per_uart.$procmux$854_CMP0 ($eq).
Removed top 22 bits (of 32) from mux cell SOC.$flatten\per_uart.$procmux$852 ($pmux).
Removed top 5 bits (of 8) from mux cell SOC.$flatten\per_uart.$ternary$cores/uart/perip_uart.v:40$248 ($mux).
Removed top 1 bits (of 2) from mux cell SOC.$flatten\per_uart.$ternary$cores/uart/perip_uart.v:31$242 ($mux).
Removed top 1 bits (of 2) from port B of cell SOC.$auto$opt_dff.cc:195:make_patterns_logic$1036 ($ne).
Removed top 1 bits (of 2) from port B of cell SOC.$auto$opt_dff.cc:195:make_patterns_logic$1038 ($ne).
Removed top 31 bits (of 32) from port B of cell SOC.$flatten\mult1.\mult1.$add$cores/mult/mult.v:83$432 ($add).
Removed top 27 bits (of 32) from port Y of cell SOC.$flatten\mult1.\mult1.$add$cores/mult/mult.v:83$432 ($add).
Removed top 27 bits (of 32) from port B of cell SOC.$flatten\mult1.\mult1.$gt$cores/mult/mult.v:84$433 ($gt).
Removed top 1 bits (of 3) from port B of cell SOC.$flatten\mult1.\mult1.$procmux$667_CMP0 ($eq).
Removed top 2 bits (of 3) from mux cell SOC.$flatten\mult1.\mult1.$procmux$673 ($mux).
Removed top 2 bits (of 3) from port B of cell SOC.$flatten\mult1.\mult1.$procmux$676_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell SOC.$flatten\mult1.\mult1.$procmux$691_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell SOC.$auto$opt_dff.cc:195:make_patterns_logic$1114 ($ne).
Removed top 2 bits (of 5) from port B of cell SOC.$flatten\mult1.$procmux$912_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell SOC.$flatten\mult1.$procmux$911_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell SOC.$flatten\mult1.$procmux$910_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell SOC.$flatten\mult1.$procmux$863_CMP0 ($eq).
Removed top 5 bits (of 7) from FF cell SOC.$auto$ff.cc:266:slice$1069 ($dffe).
Removed top 27 bits (of 32) from wire SOC.$flatten\CPU.$sub$cores/cpu/femtorv32_quark.v:174$339_Y.
Removed top 31 bits (of 32) from wire SOC.$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:144$321_Y.
Removed top 31 bits (of 32) from wire SOC.$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:145$323_Y.
Removed top 8 bits (of 32) from wire SOC.$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:229$371_Y.
Removed top 8 bits (of 32) from wire SOC.$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:230$375_Y.
Removed top 2 bits (of 4) from wire SOC.$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:285$393_Y.
Removed top 28 bits (of 32) from wire SOC.$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:357$419_Y.
Removed top 18 bits (of 30) from wire SOC.$flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:24$253_ADDR[29:0]$258.
Removed top 24 bits (of 32) from wire SOC.$flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:24$253_EN[31:0]$260.
Removed top 18 bits (of 30) from wire SOC.$flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:25$254_ADDR[29:0]$261.
Removed top 16 bits (of 32) from wire SOC.$flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:25$254_EN[31:0]$263.
Removed top 18 bits (of 30) from wire SOC.$flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:26$255_ADDR[29:0]$264.
Removed top 8 bits (of 32) from wire SOC.$flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:26$255_EN[31:0]$266.
Removed top 18 bits (of 30) from wire SOC.$flatten\RAM.$0$memwr$\MEM$cores/bram/bram.v:27$256_ADDR[29:0]$267.
Removed top 2 bits (of 3) from wire SOC.$flatten\mult1.\mult1.$4\state[2:0].
Removed top 27 bits (of 32) from wire SOC.$flatten\mult1.\mult1.$add$cores/mult/mult.v:83$432_Y.
Removed top 22 bits (of 32) from wire SOC.$flatten\per_uart.$0\d_out[31:0].
Removed top 5 bits (of 8) from wire SOC.$flatten\per_uart.$0\uart_ctrl[7:0].
Removed top 1 bits (of 2) from wire SOC.$flatten\per_uart.$ternary$cores/uart/perip_uart.v:31$242_Y.
Removed top 28 bits (of 32) from wire SOC.$flatten\per_uart.\uart0.$add$cores/uart/uart.v:137$452_Y.
Removed top 28 bits (of 32) from wire SOC.$flatten\per_uart.\uart0.$add$cores/uart/uart.v:140$455_Y.
Removed top 30 bits (of 32) from wire SOC.mem_addr.
Removed top 24 bits (of 32) from wire SOC.mem_wdata.

9.16. Executing PEEPOPT pass (run peephole optimizers).

9.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOC..
Removed 0 unused cells and 25 unused wires.
<suppressed ~1 debug messages>

9.18. Executing SHARE pass (SAT-based resource sharing).

9.19. Executing TECHMAP pass (map to technology primitives).

9.19.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

9.19.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~36 debug messages>

9.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOC.

9.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOC..

9.22. Executing TECHMAP pass (map to technology primitives).

9.22.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

9.22.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/dsp_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__MUL18X18'.
Successfully finished Verilog frontend.

9.22.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>

9.23. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module SOC:
  creating $macc model for $flatten\CPU.$add$cores/cpu/femtorv32_quark.v:127$311 ($add).
  creating $macc model for $flatten\CPU.$add$cores/cpu/femtorv32_quark.v:131$313 ($add).
  creating $macc model for $flatten\CPU.$add$cores/cpu/femtorv32_quark.v:131$314 ($add).
  creating $macc model for $flatten\CPU.$add$cores/cpu/femtorv32_quark.v:200$357 ($add).
  creating $macc model for $flatten\CPU.$add$cores/cpu/femtorv32_quark.v:205$360 ($add).
  creating $macc model for $flatten\CPU.$add$cores/cpu/femtorv32_quark.v:211$362 ($add).
  creating $macc model for $flatten\CPU.$add$cores/cpu/femtorv32_quark.v:380$426 ($add).
  creating $macc model for $flatten\CPU.$sub$cores/cpu/femtorv32_quark.v:174$339 ($sub).
  creating $macc model for $flatten\mult1.\mult1.$add$cores/mult/mult.v:76$431 ($add).
  creating $macc model for $flatten\mult1.\mult1.$add$cores/mult/mult.v:83$432 ($add).
  creating $macc model for $flatten\per_uart.\uart0.$add$cores/uart/uart.v:137$452 ($add).
  creating $macc model for $flatten\per_uart.\uart0.$add$cores/uart/uart.v:140$455 ($add).
  creating $macc model for $flatten\per_uart.\uart0.$add$cores/uart/uart.v:88$444 ($add).
  creating $macc model for $flatten\per_uart.\uart0.$add$cores/uart/uart.v:91$446 ($add).
  creating $macc model for $flatten\per_uart.\uart0.$sub$cores/uart/uart.v:39$438 ($sub).
  merging $macc model for $flatten\CPU.$add$cores/cpu/femtorv32_quark.v:131$313 into $flatten\CPU.$add$cores/cpu/femtorv32_quark.v:131$314.
  creating $alu model for $macc $flatten\per_uart.\uart0.$add$cores/uart/uart.v:91$446.
  creating $alu model for $macc $flatten\per_uart.\uart0.$add$cores/uart/uart.v:88$444.
  creating $alu model for $macc $flatten\per_uart.\uart0.$add$cores/uart/uart.v:140$455.
  creating $alu model for $macc $flatten\per_uart.\uart0.$add$cores/uart/uart.v:137$452.
  creating $alu model for $macc $flatten\mult1.\mult1.$add$cores/mult/mult.v:83$432.
  creating $alu model for $macc $flatten\mult1.\mult1.$add$cores/mult/mult.v:76$431.
  creating $alu model for $macc $flatten\CPU.$sub$cores/cpu/femtorv32_quark.v:174$339.
  creating $alu model for $macc $flatten\CPU.$add$cores/cpu/femtorv32_quark.v:380$426.
  creating $alu model for $macc $flatten\CPU.$add$cores/cpu/femtorv32_quark.v:211$362.
  creating $alu model for $macc $flatten\CPU.$add$cores/cpu/femtorv32_quark.v:205$360.
  creating $alu model for $macc $flatten\CPU.$add$cores/cpu/femtorv32_quark.v:200$357.
  creating $alu model for $macc $flatten\CPU.$add$cores/cpu/femtorv32_quark.v:131$314.
  creating $alu model for $macc $flatten\per_uart.\uart0.$sub$cores/uart/uart.v:39$438.
  creating $alu model for $macc $flatten\CPU.$add$cores/cpu/femtorv32_quark.v:127$311.
  creating $alu model for $flatten\mult1.\mult1.$gt$cores/mult/mult.v:84$433 ($gt): new $alu
  creating $alu cell for $flatten\mult1.\mult1.$gt$cores/mult/mult.v:84$433: $auto$alumacc.cc:495:replace_alu$1167
  creating $alu cell for $flatten\CPU.$add$cores/cpu/femtorv32_quark.v:127$311: $auto$alumacc.cc:495:replace_alu$1178
  creating $alu cell for $flatten\per_uart.\uart0.$sub$cores/uart/uart.v:39$438: $auto$alumacc.cc:495:replace_alu$1181
  creating $alu cell for $flatten\CPU.$add$cores/cpu/femtorv32_quark.v:131$314: $auto$alumacc.cc:495:replace_alu$1184
  creating $alu cell for $flatten\CPU.$add$cores/cpu/femtorv32_quark.v:200$357: $auto$alumacc.cc:495:replace_alu$1187
  creating $alu cell for $flatten\CPU.$add$cores/cpu/femtorv32_quark.v:205$360: $auto$alumacc.cc:495:replace_alu$1190
  creating $alu cell for $flatten\CPU.$add$cores/cpu/femtorv32_quark.v:211$362: $auto$alumacc.cc:495:replace_alu$1193
  creating $alu cell for $flatten\CPU.$add$cores/cpu/femtorv32_quark.v:380$426: $auto$alumacc.cc:495:replace_alu$1196
  creating $alu cell for $flatten\CPU.$sub$cores/cpu/femtorv32_quark.v:174$339: $auto$alumacc.cc:495:replace_alu$1199
  creating $alu cell for $flatten\mult1.\mult1.$add$cores/mult/mult.v:76$431: $auto$alumacc.cc:495:replace_alu$1202
  creating $alu cell for $flatten\mult1.\mult1.$add$cores/mult/mult.v:83$432: $auto$alumacc.cc:495:replace_alu$1205
  creating $alu cell for $flatten\per_uart.\uart0.$add$cores/uart/uart.v:137$452: $auto$alumacc.cc:495:replace_alu$1208
  creating $alu cell for $flatten\per_uart.\uart0.$add$cores/uart/uart.v:140$455: $auto$alumacc.cc:495:replace_alu$1211
  creating $alu cell for $flatten\per_uart.\uart0.$add$cores/uart/uart.v:88$444: $auto$alumacc.cc:495:replace_alu$1214
  creating $alu cell for $flatten\per_uart.\uart0.$add$cores/uart/uart.v:91$446: $auto$alumacc.cc:495:replace_alu$1217
  created 15 $alu and 0 $macc cells.

9.24. Executing OPT pass (performing simple optimizations).

9.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOC.
<suppressed ~1 debug messages>

9.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOC'.
Removed a total of 0 cells.

9.24.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SOC..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~71 debug messages>

9.24.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \SOC.
Performed a total of 0 changes.

9.24.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOC'.
Removed a total of 0 cells.

9.24.6. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 10 on $flatten\per_uart.$procdff$998 ($dff) from module SOC.
Setting constant 0-bit at position 11 on $flatten\per_uart.$procdff$998 ($dff) from module SOC.
Setting constant 0-bit at position 12 on $flatten\per_uart.$procdff$998 ($dff) from module SOC.
Setting constant 0-bit at position 13 on $flatten\per_uart.$procdff$998 ($dff) from module SOC.
Setting constant 0-bit at position 14 on $flatten\per_uart.$procdff$998 ($dff) from module SOC.
Setting constant 0-bit at position 15 on $flatten\per_uart.$procdff$998 ($dff) from module SOC.
Setting constant 0-bit at position 16 on $flatten\per_uart.$procdff$998 ($dff) from module SOC.
Setting constant 0-bit at position 17 on $flatten\per_uart.$procdff$998 ($dff) from module SOC.
Setting constant 0-bit at position 18 on $flatten\per_uart.$procdff$998 ($dff) from module SOC.
Setting constant 0-bit at position 19 on $flatten\per_uart.$procdff$998 ($dff) from module SOC.
Setting constant 0-bit at position 20 on $flatten\per_uart.$procdff$998 ($dff) from module SOC.
Setting constant 0-bit at position 21 on $flatten\per_uart.$procdff$998 ($dff) from module SOC.
Setting constant 0-bit at position 22 on $flatten\per_uart.$procdff$998 ($dff) from module SOC.
Setting constant 0-bit at position 23 on $flatten\per_uart.$procdff$998 ($dff) from module SOC.
Setting constant 0-bit at position 24 on $flatten\per_uart.$procdff$998 ($dff) from module SOC.
Setting constant 0-bit at position 25 on $flatten\per_uart.$procdff$998 ($dff) from module SOC.
Setting constant 0-bit at position 26 on $flatten\per_uart.$procdff$998 ($dff) from module SOC.
Setting constant 0-bit at position 27 on $flatten\per_uart.$procdff$998 ($dff) from module SOC.
Setting constant 0-bit at position 28 on $flatten\per_uart.$procdff$998 ($dff) from module SOC.
Setting constant 0-bit at position 29 on $flatten\per_uart.$procdff$998 ($dff) from module SOC.
Setting constant 0-bit at position 30 on $flatten\per_uart.$procdff$998 ($dff) from module SOC.
Setting constant 0-bit at position 31 on $flatten\per_uart.$procdff$998 ($dff) from module SOC.

9.24.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOC..
Removed 2 unused cells and 3 unused wires.
<suppressed ~3 debug messages>

9.24.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOC.

9.24.9. Rerunning OPT passes. (Maybe there is more to do..)

9.24.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SOC..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~71 debug messages>

9.24.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \SOC.
Performed a total of 0 changes.

9.24.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOC'.
Removed a total of 0 cells.

9.24.13. Executing OPT_DFF pass (perform DFF optimizations).

9.24.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOC..

9.24.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOC.

9.24.16. Finished OPT passes. (There is nothing left to do.)

9.25. Executing MEMORY pass.

9.25.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 96 transformations.

9.25.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 6 transformations.

9.25.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing SOC.CPU.registerFile write port 0.
  Analyzing SOC.RAM.MEM write port 0.
  Analyzing SOC.RAM.MEM write port 1.
  Analyzing SOC.RAM.MEM write port 2.
  Analyzing SOC.RAM.MEM write port 3.

9.25.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

9.25.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `\CPU.registerFile'[0] in module `\SOC': merging output FF to cell.
    Write port 0: don't care on collision.
Checking read port `\CPU.registerFile'[1] in module `\SOC': merging output FF to cell.
    Write port 0: don't care on collision.
Checking read port `\RAM.MEM'[0] in module `\SOC': merging output FF to cell.
    Write port 0: don't care on collision.
    Write port 1: don't care on collision.
    Write port 2: don't care on collision.
    Write port 3: don't care on collision.

9.25.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOC..
Removed 3 unused cells and 99 unused wires.
<suppressed ~4 debug messages>

9.25.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating read ports of memory SOC.CPU.registerFile by address:
Consolidating write ports of memory SOC.RAM.MEM by address:
  Merging ports 0, 1 (address \RAM.mem_addr [13:2]).
  Merging ports 0, 2 (address \RAM.mem_addr [13:2]).
  Merging ports 0, 3 (address \RAM.mem_addr [13:2]).

9.25.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

9.25.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOC..
Removed 4 unused cells and 4 unused wires.
<suppressed ~5 debug messages>

9.25.10. Executing MEMORY_COLLECT pass (generating $mem cells).

9.26. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOC..

9.27. Executing MEMORY_LIBMAP pass (mapping memories to cells).
mapping memory SOC.CPU.registerFile via $__TRELLIS_DPR16X4_
Extracted data FF from read port 0 of SOC.CPU.registerFile: $\CPU.registerFile$rdreg[0]
Extracted data FF from read port 1 of SOC.CPU.registerFile: $\CPU.registerFile$rdreg[1]
mapping memory SOC.RAM.MEM via $__ECP5_DP16KD_
<suppressed ~1796 debug messages>

9.28. Executing TECHMAP pass (map to technology primitives).

9.28.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/lutrams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/lutrams_map.v' to AST representation.
Generating RTLIL representation for module `\$__TRELLIS_DPR16X4_'.
Successfully finished Verilog frontend.

9.28.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ECP5_DP16KD_'.
Generating RTLIL representation for module `\$__ECP5_PDPW16KD_'.
Successfully finished Verilog frontend.

9.28.3. Continuing TECHMAP pass.
Using template $paramod$04778961cc1285a5efea28f98f28381eb2862208\$__TRELLIS_DPR16X4_ for cells of type $__TRELLIS_DPR16X4_.
Using template $paramod$167987b97334f90dee0f4d64988ff8ea19f0e98f\$__ECP5_DP16KD_ for cells of type $__ECP5_DP16KD_.
Using template $paramod$8b644a17b3e589e8104f03c61e45bfdbe3aa1693\$__ECP5_DP16KD_ for cells of type $__ECP5_DP16KD_.
Using template $paramod$30febf4b75773309eef7cf2ed38eef7b5b01dda5\$__ECP5_DP16KD_ for cells of type $__ECP5_DP16KD_.
Using template $paramod$860421465ffcd9b2b8c68f739be5d94a1021232c\$__ECP5_DP16KD_ for cells of type $__ECP5_DP16KD_.
Using template $paramod$69b7e12576710fbb010708d6d6bc8a90b013e894\$__ECP5_DP16KD_ for cells of type $__ECP5_DP16KD_.
Using template $paramod$3b42527154bb317eaf8c69c9f205bec802ac2e8c\$__ECP5_DP16KD_ for cells of type $__ECP5_DP16KD_.
Using template $paramod$d310b2a3bf476e5b537608ba829393fe5466b6b3\$__ECP5_DP16KD_ for cells of type $__ECP5_DP16KD_.
Using template $paramod$02509def5c49c8185d2d77bc7fd4bff036a9dd15\$__ECP5_DP16KD_ for cells of type $__ECP5_DP16KD_.
No more expansions possible.
<suppressed ~290 debug messages>

9.29. Executing OPT pass (performing simple optimizations).

9.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOC.
<suppressed ~198 debug messages>

9.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOC'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

9.29.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:266:slice$1135 ($sdffe) from module SOC (D = $flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y [1:0], Q = \CPU.PC [1:0]).
Adding SRST signal on $auto$ff.cc:266:slice$1088 ($dffe) from module SOC (D = \mult1.A [0], Q = \mult1.mult1.A [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$1083 ($dffe) from module SOC (D = \mult1.B [15], Q = \mult1.mult1.B [15], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$1072 ($dffe) from module SOC (D = $auto$wreduce.cc:514:run$1157 [4:0], Q = \mult1.mult1.count, rval = 5'00000).

9.29.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOC..
Removed 5 unused cells and 455 unused wires.
<suppressed ~6 debug messages>

9.29.5. Rerunning OPT passes. (Removed registers in this run.)

9.29.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOC.
<suppressed ~2 debug messages>

9.29.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOC'.
Removed a total of 0 cells.

9.29.8. Executing OPT_DFF pass (perform DFF optimizations).

9.29.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOC..
Removed 4 unused cells and 4 unused wires.
<suppressed ~5 debug messages>

9.29.10. Finished fast OPT passes.

9.30. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

9.31. Executing OPT pass (performing simple optimizations).

9.31.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOC.

9.31.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOC'.
Removed a total of 0 cells.

9.31.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SOC..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~57 debug messages>

9.31.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \SOC.
    New input vector for $reduce_or cell $auto$memory_libmap.cc:1712:emit_port$1369: \RAM.mem_wmask
    Consolidated identical input bits for $mux cell $flatten\CPU.$procmux$726:
      Old ports: A=4'0001, B=4'100x, Y=$flatten\CPU.$procmux$726_Y
      New ports: A=2'01, B=2'1x, Y={ $flatten\CPU.$procmux$726_Y [3] $flatten\CPU.$procmux$726_Y [0] }
      New connections: $flatten\CPU.$procmux$726_Y [2:1] = 2'00
    Consolidated identical input bits for $mux cell $flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:206$358:
      Old ports: A={ \CPU.instr [29] \CPU.instr [29] \CPU.instr [29] \CPU.instr [29] \CPU.instr [29] \CPU.instr [29] \CPU.instr [29] \CPU.instr [29] \CPU.instr [29] \CPU.instr [29] \CPU.instr [29] \CPU.instr [29] \CPU.instr [5] \CPU.instr [28:23] \CPU.instr [9:6] 1'0 }, B={ \CPU.instr [21:10] 12'000000000000 }, Y=$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:206$358_Y
      New ports: A={ \CPU.instr [29] \CPU.instr [29] \CPU.instr [29] \CPU.instr [29] \CPU.instr [29] \CPU.instr [29] \CPU.instr [29] \CPU.instr [29] \CPU.instr [29] \CPU.instr [29] \CPU.instr [29] \CPU.instr [29] \CPU.instr [5] \CPU.instr [28:23] \CPU.instr [9:6] }, B={ \CPU.instr [21:10] 11'00000000000 }, Y=$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:206$358_Y [23:1]
      New connections: $flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:206$358_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:227$366:
      Old ports: A=0, B={ \CPU.instr [29:10] 12'000000000000 }, Y=$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:227$366_Y
      New ports: A=20'00000000000000000000, B=\CPU.instr [29:10], Y=$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:227$366_Y [31:12]
      New connections: $flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:227$366_Y [11:0] = 12'000000000000
    Consolidated identical input bits for $mux cell $flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:284$392:
      Old ports: A=4'0100, B=4'1000, Y=$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:284$392_Y
      New ports: A=2'01, B=2'10, Y=$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:284$392_Y [3:2]
      New connections: $flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:284$392_Y [1:0] = 2'00
    Consolidated identical input bits for $mux cell $flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:288$395:
      Old ports: A=4'0011, B=4'1100, Y=$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:288$395_Y
      New ports: A=2'01, B=2'10, Y={ $flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:288$395_Y [2] $flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:288$395_Y [0] }
      New connections: { $flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:288$395_Y [3] $flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:288$395_Y [1] } = { $flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:288$395_Y [2] $flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:288$395_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:357$419:
      Old ports: A=4'0001, B=4'1000, Y=$auto$wreduce.cc:514:run$1148 [3:0]
      New ports: A=2'01, B=2'10, Y={ $auto$wreduce.cc:514:run$1148 [3] $auto$wreduce.cc:514:run$1148 [0] }
      New connections: $auto$wreduce.cc:514:run$1148 [2:1] = 2'00
    Consolidated identical input bits for $mux cell $flatten\mult1.\mult1.$procmux$664:
      Old ports: A=3'001, B=3'100, Y=$flatten\mult1.\mult1.$5\state[2:0]
      New ports: A=2'01, B=2'10, Y={ $flatten\mult1.\mult1.$5\state[2:0] [2] $flatten\mult1.\mult1.$5\state[2:0] [0] }
      New connections: $flatten\mult1.\mult1.$5\state[2:0] [1] = 1'0
    Consolidated identical input bits for $mux cell $flatten\mult1.\mult1.$procmux$684:
      Old ports: A=3'000, B=3'101, Y=$flatten\mult1.\mult1.$3\state[2:0]
      New ports: A=1'0, B=1'1, Y=$flatten\mult1.\mult1.$3\state[2:0] [0]
      New connections: $flatten\mult1.\mult1.$3\state[2:0] [2:1] = { $flatten\mult1.\mult1.$3\state[2:0] [0] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\mult1.\mult1.$ternary$cores/mult/mult.v:84$434:
      Old ports: A=3'000, B=3'100, Y=$flatten\mult1.\mult1.$ternary$cores/mult/mult.v:84$434_Y
      New ports: A=1'0, B=1'1, Y=$flatten\mult1.\mult1.$ternary$cores/mult/mult.v:84$434_Y [2]
      New connections: $flatten\mult1.\mult1.$ternary$cores/mult/mult.v:84$434_Y [1:0] = 2'00
    Consolidated identical input bits for $mux cell $flatten\per_uart.$ternary$cores/uart/perip_uart.v:32$243:
      Old ports: A=2'00, B=2'10, Y=$flatten\per_uart.$ternary$cores/uart/perip_uart.v:32$243_Y
      New ports: A=1'0, B=1'1, Y=$flatten\per_uart.$ternary$cores/uart/perip_uart.v:32$243_Y [1]
      New connections: $flatten\per_uart.$ternary$cores/uart/perip_uart.v:32$243_Y [0] = 1'0
  Optimizing cells in module \SOC.
    Consolidated identical input bits for $mux cell $flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:205$359:
      Old ports: A=$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:206$358_Y, B={ \CPU.instr [29] \CPU.instr [29] \CPU.instr [29] \CPU.instr [29] \CPU.instr [17:10] \CPU.instr [18] \CPU.instr [28:19] 1'0 }, Y=$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:205$359_Y
      New ports: A=$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:206$358_Y [23:1], B={ \CPU.instr [29] \CPU.instr [29] \CPU.instr [29] \CPU.instr [29] \CPU.instr [17:10] \CPU.instr [18] \CPU.instr [28:19] }, Y=$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:205$359_Y [23:1]
      New connections: $flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:205$359_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:287$396:
      Old ports: A=4'1111, B=$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:288$395_Y, Y=$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:287$396_Y
      New ports: A=2'11, B={ $flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:288$395_Y [2] $flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:288$395_Y [0] }, Y={ $flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:287$396_Y [2] $flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:287$396_Y [0] }
      New connections: { $flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:287$396_Y [3] $flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:287$396_Y [1] } = { $flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:287$396_Y [2] $flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:287$396_Y [0] }
  Optimizing cells in module \SOC.
Performed a total of 15 changes.

9.31.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOC'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

9.31.6. Executing OPT_DFF pass (perform DFF optimizations).

9.31.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOC..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

9.31.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOC.
<suppressed ~6 debug messages>

9.31.9. Rerunning OPT passes. (Maybe there is more to do..)

9.31.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SOC..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~59 debug messages>

9.31.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \SOC.
Performed a total of 0 changes.

9.31.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOC'.
Removed a total of 0 cells.

9.31.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:266:slice$2106 ($sdffe) from module SOC (D = $flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y [0], Q = \CPU.PC [0]).

9.31.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOC..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

9.31.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOC.

9.31.16. Rerunning OPT passes. (Maybe there is more to do..)

9.31.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SOC..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~59 debug messages>

9.31.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \SOC.
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$2124: { $auto$opt_dff.cc:194:make_patterns_logic$2107 \CPU.state [2] $auto$opt_dff.cc:194:make_patterns_logic$2121 }
    Consolidated identical input bits for $mux cell $flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:355$417:
      Old ports: A={ \CPU.PCplus4 [23:2] 2'x }, B={ \CPU.PCplusImm [23:1] 1'x }, Y=$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:355$417_Y
      New ports: A={ \CPU.PCplus4 [23:2] 1'x }, B=\CPU.PCplusImm [23:1], Y=$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:355$417_Y [23:1]
      New connections: $flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:355$417_Y [0] = 1'x
  Optimizing cells in module \SOC.
Performed a total of 2 changes.

9.31.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOC'.
Removed a total of 0 cells.

9.31.20. Executing OPT_DFF pass (perform DFF optimizations).

9.31.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOC..

9.31.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOC.

9.31.23. Rerunning OPT passes. (Maybe there is more to do..)

9.31.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SOC..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~59 debug messages>

9.31.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \SOC.
Performed a total of 0 changes.

9.31.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOC'.
Removed a total of 0 cells.

9.31.27. Executing OPT_DFF pass (perform DFF optimizations).

9.31.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOC..

9.31.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOC.

9.31.30. Finished OPT passes. (There is nothing left to do.)

9.32. Executing TECHMAP pass (map to technology primitives).

9.32.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

9.32.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/arith_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ecp5_alu'.
Successfully finished Verilog frontend.

9.32.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$54d740639e1393b22262823179ff783ea9f17a35\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod$0063cc74cb9d92ba0fcb27304a45144f31b8a510\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $sdff.
Using template $paramod$672a140277c71df8314410f22acc08d55222c3c7\_80_ecp5_alu for cells of type $alu.
Using template $paramod$b18e16801adf491a64caa0542270798e5d4ac6b6\_80_ecp5_alu for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $sdffce.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $dffe.
Using template $paramod$c2e415ef15bc3ccd2723772353a6b450d3d76206\_90_pmux for cells of type $pmux.
Using template $paramod$dc04b7d98e503a7bab16fce2df70e6e2c5ca34d6\_80_ecp5_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$6a42b6fefed750f8a1c58eab59479d960557103c\_80_ecp5_alu for cells of type $alu.
Using template $paramod$e82d3fc1811c5751348a3964470632b35a435fc7\_80_ecp5_alu for cells of type $alu.
Using template $paramod$448756c9a9dfaa49080ce4b90c6cc182883e181f\_80_ecp5_alu for cells of type $alu.
Using template $paramod$2bd81f420048247ff6903399c560fe0f8bd48ccc\_80_ecp5_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$080e6a70eb8bfa1ccf22d9718e795074645029a4\_80_ecp5_alu for cells of type $alu.
Using template $paramod$a1665ef28c749ebcdbe9aecd466e644647b56463\_80_ecp5_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod$constmap:1b6115d36d46c0296d0024e3e3623593810ba834$paramod$3b3a66a7766bf28794ddcd35314b025da1fe57c8\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$789c344356a154d2afc7b832b41d1067dbc946ba\_80_ecp5_alu for cells of type $alu.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod$824a2ca00d29d886599434cf8ea60471635f2955\_90_demux for cells of type $demux.
Using template $paramod$521ce43182eecb9f60c72393a788160d2c356bf5\_90_pmux for cells of type $pmux.
Using template $paramod$5fa769bd6f6ca230a24c9bbc0e120f15bcfea838\_90_pmux for cells of type $pmux.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_80_ecp5_alu for cells of type $alu.
Using template $paramod$57f63e8a3282e053be0430389b09fa050ac7dca0\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $adffe.
Using template $paramod$77db613179eb70c5e4e5c5aca72d602a7c6017b6\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu_brent_kung\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
No more expansions possible.
<suppressed ~1717 debug messages>

9.33. Executing OPT pass (performing simple optimizations).

9.33.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOC.
<suppressed ~1532 debug messages>

9.33.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOC'.
<suppressed ~534 debug messages>
Removed a total of 178 cells.

9.33.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:266:slice$4506 ($_DFF_P_) from module SOC (D = \CPU.rs2 [2], Q = \per_uart.uart_ctrl [2]).

9.33.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOC..
Removed 564 unused cells and 1370 unused wires.
<suppressed ~570 debug messages>

9.33.5. Rerunning OPT passes. (Removed registers in this run.)

9.33.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOC.

9.33.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOC'.
Removed a total of 0 cells.

9.33.8. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$5120 ($_SDFF_PN0_) from module SOC (D = \CPU.state [1], Q = \CPU.state [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4613 ($_DFF_P_) from module SOC (D = $flatten\per_uart.$procmux$852.B_AND_S [9], Q = \per_uart.d_out [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4612 ($_DFF_P_) from module SOC (D = $flatten\per_uart.$procmux$852.B_AND_S [8], Q = \per_uart.d_out [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4611 ($_DFF_P_) from module SOC (D = $flatten\per_uart.$procmux$852.Y_B [7], Q = \per_uart.d_out [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4610 ($_DFF_P_) from module SOC (D = $flatten\per_uart.$procmux$852.B_AND_S [16], Q = \per_uart.d_out [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4609 ($_DFF_P_) from module SOC (D = $flatten\per_uart.$procmux$852.B_AND_S [15], Q = \per_uart.d_out [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4608 ($_DFF_P_) from module SOC (D = $flatten\per_uart.$procmux$852.B_AND_S [14], Q = \per_uart.d_out [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4607 ($_DFF_P_) from module SOC (D = $flatten\per_uart.$procmux$852.B_AND_S [13], Q = \per_uart.d_out [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4606 ($_DFF_P_) from module SOC (D = $flatten\per_uart.$procmux$852.B_AND_S [12], Q = \per_uart.d_out [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4605 ($_DFF_P_) from module SOC (D = $flatten\per_uart.$procmux$852.B_AND_S [11], Q = \per_uart.d_out [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4604 ($_DFF_P_) from module SOC (D = $flatten\per_uart.$procmux$852.B_AND_S [10], Q = \per_uart.d_out [0], rval = 1'0).

9.33.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOC..
Removed 11 unused cells and 2 unused wires.
<suppressed ~12 debug messages>

9.33.10. Rerunning OPT passes. (Removed registers in this run.)

9.33.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOC.

9.33.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOC'.
Removed a total of 0 cells.

9.33.13. Executing OPT_DFF pass (perform DFF optimizations).

9.33.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOC..

9.33.15. Finished fast OPT passes.

9.34. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOC..

9.35. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

9.36. Executing TECHMAP pass (map to technology primitives).

9.36.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFE_PP1N_'.
Generating RTLIL representation for module `\$_ALDFF_NP_'.
Generating RTLIL representation for module `\$_ALDFF_PP_'.
Generating RTLIL representation for module `\$_ALDFFE_NPN_'.
Generating RTLIL representation for module `\$_ALDFFE_NPP_'.
Generating RTLIL representation for module `\$_ALDFFE_PPN_'.
Generating RTLIL representation for module `\$_ALDFFE_PPP_'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Successfully finished Verilog frontend.

9.36.2. Continuing TECHMAP pass.
Using template $paramod\$_DFFE_PP_\_TECHMAP_WIREINIT_Q_=1'x for cells of type $_DFFE_PP_.
Using template $paramod\$_DFF_P_\_TECHMAP_WIREINIT_Q_=1'x for cells of type $_DFF_P_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
Using template \$_SDFF_PP1_ for cells of type $_SDFF_PP1_.
Using template \$_SDFFE_PP0P_ for cells of type $_SDFFE_PP0P_.
Using template $paramod\$_DFFE_PP_\_TECHMAP_WIREINIT_Q_=1'0 for cells of type $_DFFE_PP_.
Using template \$_SDFFE_PP1P_ for cells of type $_SDFFE_PP1P_.
Using template \$_SDFFE_PP0N_ for cells of type $_SDFFE_PP0N_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
No more expansions possible.
<suppressed ~517 debug messages>

9.37. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOC.
<suppressed ~6 debug messages>

9.38. Executing SIMPLEMAP pass (map simple cells to gate primitives).

9.39. Executing LATTICE_GSR pass (implement FF init values).
Handling GSR in SOC.

9.40. Executing ATTRMVCP pass (move or copy attributes).

9.41. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOC..
Removed 0 unused cells and 2175 unused wires.
<suppressed ~1 debug messages>

9.42. Executing TECHMAP pass (map to technology primitives).

9.42.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/latches_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

9.42.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

9.43. Executing ABC9 pass.

9.43.1. Executing ABC9_OPS pass (helper functions for ABC9).

9.43.2. Executing ABC9_OPS pass (helper functions for ABC9).

9.43.3. Executing PROC pass (convert processes to netlists).

9.43.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

9.43.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:344$8688 in module $paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF.
Removed a total of 0 dead cases.

9.43.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 1 assignment to connection.

9.43.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `$paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$8689'.
  Set init value: \Q = 1'0

9.43.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \muxlsr in `$paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:344$8688'.

9.43.3.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~1 debug messages>

9.43.3.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$8689'.
Creating decoders for process `$paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:344$8688'.
     1/1: $0\Q[0:0]

9.43.3.8. Executing PROC_DLATCH pass (convert process syncs to latches).
Warning: Ignoring boxed module $paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF.

9.43.3.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF.\Q' using process `$paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:344$8688'.
  created $adff cell `$procdff$8694' with positive edge clock and positive level reset.

9.43.3.10. Executing PROC_MEMWR pass (convert process memory writes to cells).
Warning: Ignoring boxed module $paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF.

9.43.3.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$8689'.
Found and cleaned up 1 empty switch in `$paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:344$8688'.
Removing empty process `$paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:344$8688'.
Cleaned up 1 empty switch.

9.43.3.12. Executing OPT_EXPR pass (perform const folding).
Warning: Ignoring boxed module $paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF.

9.43.4. Executing PROC pass (convert processes to netlists).

9.43.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

9.43.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:344$8702 in module $paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF.
Removed a total of 0 dead cases.

9.43.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 1 assignment to connection.

9.43.4.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `$paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$8703'.
  Set init value: \Q = 1'0

9.43.4.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \muxlsr in `$paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:344$8702'.

9.43.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~1 debug messages>

9.43.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$8703'.
Creating decoders for process `$paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:344$8702'.
     1/1: $0\Q[0:0]

9.43.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).
Warning: Ignoring boxed module $paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF.

9.43.4.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF.\Q' using process `$paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:344$8702'.
  created $adff cell `$procdff$8708' with positive edge clock and positive level reset.

9.43.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).
Warning: Ignoring boxed module $paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF.

9.43.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$8703'.
Found and cleaned up 1 empty switch in `$paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:344$8702'.
Removing empty process `$paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:344$8702'.
Cleaned up 1 empty switch.

9.43.4.12. Executing OPT_EXPR pass (perform const folding).
Warning: Ignoring boxed module $paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF.

9.43.5. Executing PROC pass (convert processes to netlists).

9.43.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:213$8726'.
Cleaned up 1 empty switch.

9.43.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$8727 in module $paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.
Removed a total of 0 dead cases.

9.43.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 22 assignments to connections.

9.43.5.4. Executing PROC_INIT pass (extract init attributes).

9.43.5.5. Executing PROC_ARST pass (detect async resets in processes).

9.43.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~1 debug messages>

9.43.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$8751'.
Creating decoders for process `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$8727'.
     1/3: $1$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$8725_EN[3:0]$8732
     2/3: $1$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$8725_DATA[3:0]$8731
     3/3: $1$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$8725_ADDR[3:0]$8733
Creating decoders for process `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:213$8726'.

9.43.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).
Warning: Ignoring boxed module $paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.

9.43.5.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.\i' using process `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$8751'.
  created direct connection (no actual register cell created).
Creating register for signal `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:207$8720_EN' using process `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$8751'.
  created direct connection (no actual register cell created).
Creating register for signal `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:207$8714_EN' using process `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$8751'.
  created direct connection (no actual register cell created).
Creating register for signal `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:207$8709_EN' using process `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$8751'.
  created direct connection (no actual register cell created).
Creating register for signal `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:207$8710_EN' using process `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$8751'.
  created direct connection (no actual register cell created).
Creating register for signal `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:207$8711_EN' using process `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$8751'.
  created direct connection (no actual register cell created).
Creating register for signal `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:207$8715_EN' using process `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$8751'.
  created direct connection (no actual register cell created).
Creating register for signal `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:207$8712_EN' using process `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$8751'.
  created direct connection (no actual register cell created).
Creating register for signal `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:207$8716_EN' using process `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$8751'.
  created direct connection (no actual register cell created).
Creating register for signal `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:207$8717_EN' using process `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$8751'.
  created direct connection (no actual register cell created).
Creating register for signal `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:207$8721_EN' using process `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$8751'.
  created direct connection (no actual register cell created).
Creating register for signal `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:207$8718_EN' using process `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$8751'.
  created direct connection (no actual register cell created).
Creating register for signal `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:207$8722_EN' using process `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$8751'.
  created direct connection (no actual register cell created).
Creating register for signal `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:207$8723_EN' using process `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$8751'.
  created direct connection (no actual register cell created).
Creating register for signal `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:207$8724_EN' using process `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$8751'.
  created direct connection (no actual register cell created).
Creating register for signal `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:207$8713_EN' using process `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$8751'.
  created direct connection (no actual register cell created).
Creating register for signal `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:207$8719_EN' using process `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$8751'.
  created direct connection (no actual register cell created).
Creating register for signal `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$8725_DATA' using process `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$8727'.
  created $dff cell `$procdff$8777' with positive edge clock.
Creating register for signal `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$8725_EN' using process `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$8727'.
  created $dff cell `$procdff$8778' with positive edge clock.
Creating register for signal `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$8725_ADDR' using process `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$8727'.
  created $dff cell `$procdff$8779' with positive edge clock.
Creating register for signal `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.\muxwre' using process `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:213$8726'.
  created direct connection (no actual register cell created).

9.43.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).
Warning: Ignoring boxed module $paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.

9.43.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$8751'.
Found and cleaned up 1 empty switch in `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$8727'.
Removing empty process `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:213$8726'.
Cleaned up 1 empty switch.

9.43.5.12. Executing OPT_EXPR pass (perform const folding).
Warning: Ignoring boxed module $paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.

9.43.6. Executing SCC pass (detecting logic loops).
Found an SCC: $auto$ff.cc:266:slice$2500 $auto$ff.cc:266:slice$2512 $auto$ff.cc:266:slice$2503 $auto$ff.cc:266:slice$2515 $auto$simplemap.cc:175:logic_reduce$4990 $auto$ff.cc:266:slice$2514 $auto$simplemap.cc:175:logic_reduce$4995 $auto$simplemap.cc:175:logic_reduce$4989 $auto$ff.cc:266:slice$2513 $auto$ff.cc:266:slice$2511 $auto$simplemap.cc:175:logic_reduce$4988 $auto$ff.cc:266:slice$2510 $auto$ff.cc:266:slice$2509 $auto$simplemap.cc:175:logic_reduce$4998 $auto$simplemap.cc:175:logic_reduce$4994 $auto$simplemap.cc:175:logic_reduce$4987 $auto$ff.cc:266:slice$2508 $auto$ff.cc:266:slice$2507 $auto$simplemap.cc:175:logic_reduce$4986 $auto$ff.cc:266:slice$2506 $auto$ff.cc:266:slice$2505 $auto$simplemap.cc:175:logic_reduce$4993 $auto$simplemap.cc:175:logic_reduce$4985 $auto$ff.cc:266:slice$2504 $auto$simplemap.cc:175:logic_reduce$4984 $auto$ff.cc:266:slice$2502 $auto$simplemap.cc:175:logic_reduce$4983 $auto$ff.cc:266:slice$2501 $auto$simplemap.cc:134:simplemap_reduce$5118 $auto$simplemap.cc:204:simplemap_lognot$5001 $auto$simplemap.cc:175:logic_reduce$5000 $auto$simplemap.cc:175:logic_reduce$4997 $auto$simplemap.cc:175:logic_reduce$4992
Found an SCC: $auto$simplemap.cc:134:simplemap_reduce$5947 $auto$simplemap.cc:83:simplemap_bitop$2820 $auto$ff.cc:266:slice$7846 $auto$dfflegalize.cc:941:flip_pol$8169 $auto$simplemap.cc:134:simplemap_reduce$7850
Found 2 SCCs in module SOC.
Found 2 SCCs.

9.43.7. Executing ABC9_OPS pass (helper functions for ABC9).

9.43.8. Executing TECHMAP pass (map to technology primitives).

9.43.8.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

9.43.8.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~168 debug messages>

9.43.9. Executing OPT pass (performing simple optimizations).

9.43.9.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF.
Optimizing module $paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF.
Optimizing module $paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.

9.43.9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF'.
Finding identical cells in module `$paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF'.
Finding identical cells in module `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4'.
Removed a total of 0 cells.

9.43.9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

9.43.9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF.
  Optimizing cells in module $paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF.
  Optimizing cells in module $paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.
Performed a total of 0 changes.

9.43.9.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF'.
Finding identical cells in module `$paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF'.
Finding identical cells in module `$paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4'.
Removed a total of 0 cells.

9.43.9.6. Executing OPT_DFF pass (perform DFF optimizations).

9.43.9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF..
Finding unused cells or wires in module $paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF..
Finding unused cells or wires in module $paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4..

9.43.9.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.
Optimizing module $paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF.
Optimizing module $paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF.

9.43.9.9. Finished OPT passes. (There is nothing left to do.)

9.43.10. Executing TECHMAP pass (map to technology primitives).

9.43.10.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/abc9_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/abc9_map.v' to AST representation.
Successfully finished Verilog frontend.

9.43.10.2. Continuing TECHMAP pass.
Using template $paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4 for cells of type $paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.
Using template $paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF for cells of type $paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF.
Using template $paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF for cells of type $paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF.
No more expansions possible.
<suppressed ~73 debug messages>

9.43.11. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/abc9_model.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__ABC9_DELAY'.
Generating RTLIL representation for module `$__ABC9_SCC_BREAKER'.
Generating RTLIL representation for module `$__DFF_N__$abc9_flop'.
Generating RTLIL representation for module `$__DFF_P__$abc9_flop'.
Successfully finished Verilog frontend.

9.43.12. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~2 debug messages>

9.43.13. Executing ABC9_OPS pass (helper functions for ABC9).

9.43.14. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~2 debug messages>

9.43.15. Executing TECHMAP pass (map to technology primitives).

9.43.15.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

9.43.15.2. Continuing TECHMAP pass.
Using template $paramod$838872d5a4bab89607f53482b205c0fd50d8b82e\CCU2C for cells of type $paramod$838872d5a4bab89607f53482b205c0fd50d8b82e\CCU2C.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $or.
Using template $paramod\LUT2\INIT=4'1010 for cells of type LUT2.
Using template $paramod\LUT4\INIT=16'1001011010101010 for cells of type LUT4.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $mux.
No more expansions possible.
<suppressed ~207 debug messages>

9.43.16. Executing OPT pass (performing simple optimizations).

9.43.16.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOC.
<suppressed ~18 debug messages>

9.43.16.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOC'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

9.43.16.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SOC..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

9.43.16.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \SOC.
Performed a total of 0 changes.

9.43.16.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOC'.
Removed a total of 0 cells.

9.43.16.6. Executing OPT_DFF pass (perform DFF optimizations).

9.43.16.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOC..
Removed 0 unused cells and 55 unused wires.
<suppressed ~1 debug messages>

9.43.16.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOC.

9.43.16.9. Rerunning OPT passes. (Maybe there is more to do..)

9.43.16.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SOC..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

9.43.16.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \SOC.
Performed a total of 0 changes.

9.43.16.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOC'.
Removed a total of 0 cells.

9.43.16.13. Executing OPT_DFF pass (perform DFF optimizations).

9.43.16.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOC..

9.43.16.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOC.

9.43.16.16. Finished OPT passes. (There is nothing left to do.)

9.43.17. Executing AIGMAP pass (map logic to AIG).
Module SOC: replaced 18 cells with 120 new cells, skipped 39 cells.
  replaced 3 cell types:
       2 $_OR_
       2 $_XOR_
      14 $_MUX_
  not replaced 3 cell types:
      31 $specify2
       4 $_NOT_
       4 $_AND_

9.43.18. Executing AIGMAP pass (map logic to AIG).
Module SOC: replaced 1679 cells with 9981 new cells, skipped 1120 cells.
  replaced 4 cell types:
     588 $_OR_
      44 $_XOR_
       2 $_ORNOT_
    1045 $_MUX_
  not replaced 13 cell types:
       6 $scopeinfo
     275 $_NOT_
     201 $_AND_
     377 TRELLIS_FF
       8 DP16KD
      32 $paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4
       3 $paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF
      33 $paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF_$abc9_byp
      33 $paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF
      32 $paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4_$abc9_byp
     116 $paramod$838872d5a4bab89607f53482b205c0fd50d8b82e\CCU2C
       3 $paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF_$abc9_byp
       1 $__ABC9_SCC_BREAKER

9.43.18.1. Executing ABC9_OPS pass (helper functions for ABC9).

9.43.18.2. Executing ABC9_OPS pass (helper functions for ABC9).

9.43.18.3. Executing XAIGER backend.
<suppressed ~11 debug messages>
Extracted 4058 AND gates and 11956 wires from module `SOC' to a netlist network with 578 inputs and 638 outputs.

9.43.18.4. Executing ABC9_EXE pass (technology mapping using ABC9).

9.43.18.5. Executing ABC9.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_lut <abc-temp-dir>/input.lut 
ABC: + read_box <abc-temp-dir>/input.box 
ABC: + &read <abc-temp-dir>/input.xaig 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =    578/    638  and =    2903  lev =   30 (3.73)  mem = 0.08 MB  box = 184  bb = 68
ABC: + &scorr 
ABC: Warning: The network is combinational.
ABC: + &sweep 
ABC: + &dc2 
ABC: + &dch -f 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =    578/    638  and =    4106  lev =   20 (2.34)  mem = 0.10 MB  ch =  608  box = 184  bb = 68
ABC: cst =       0  cls =    539  lit =     608  unused =    4049  proof =     0
ABC: + &if -W 300 -v 
ABC: K = 7. Memory (bytes): Truth =    0. Cut =   64. Obj =  148. Set =  672. CutMin = no
ABC: Node =    4106.  Ch =   539.  Total mem =    1.13 MB. Peak cut mem =    0.07 MB.
ABC: P:  Del = 4879.00.  Ar =    2914.0.  Edge =     4172.  Cut =    54338.  T =     0.01 sec
ABC: P:  Del = 4879.00.  Ar =    2845.0.  Edge =     4302.  Cut =    55112.  T =     0.01 sec
ABC: P:  Del = 4875.00.  Ar =    1602.0.  Edge =     3704.  Cut =    95212.  T =     0.02 sec
ABC: F:  Del = 4875.00.  Ar =    1249.0.  Edge =     3291.  Cut =    69114.  T =     0.02 sec
ABC: A:  Del = 4875.00.  Ar =    1204.0.  Edge =     3093.  Cut =    69553.  T =     0.03 sec
ABC: A:  Del = 4875.00.  Ar =    1180.0.  Edge =     3071.  Cut =    67924.  T =     0.02 sec
ABC: Total time =     0.12 sec
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + &mfs 
ABC: + &ps -l 
ABC: <abc-temp-dir>/input : i/o =    578/    638  and =    2956  lev =   19 (2.47)  mem = 0.08 MB  box = 184  bb = 68
ABC: Mapping (K=7)  :  lut =    811  edge =    3056  lev =    8 (1.18)  Boxes are not in a topological order. Switching to level computation without boxes.
ABC: levB =   19  mem = 0.04 MB
ABC: LUT = 811 : 2=102 12.6 %  3=236 29.1 %  4=296 36.5 %  5=121 14.9 %  6=37 4.6 %  7=19 2.3 %  Ave = 3.77
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + time 
ABC: elapse: 1.24 seconds, total: 1.24 seconds

9.43.18.6. Executing AIGER frontend.
<suppressed ~2444 debug messages>
Removed 4542 unused cells and 7910 unused wires.

9.43.18.7. Executing ABC9_OPS pass (helper functions for ABC9).
ABC RESULTS:              $lut cells:      815
ABC RESULTS:   $paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF_$abc9_byp cells:       33
ABC RESULTS:   $paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4_$abc9_byp cells:       32
ABC RESULTS:   $paramod$838872d5a4bab89607f53482b205c0fd50d8b82e\CCU2C cells:      116
ABC RESULTS:   $paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF_$abc9_byp cells:        3
ABC RESULTS:           input signals:      106
ABC RESULTS:          output signals:      232
Removing temp directory.

9.43.19. Executing TECHMAP pass (map to technology primitives).

9.43.19.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/abc9_unmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/abc9_unmap.v' to AST representation.
Generating RTLIL representation for module `\$__DFF_x__$abc9_flop'.
Generating RTLIL representation for module `\$__ABC9_SCC_BREAKER'.
Successfully finished Verilog frontend.

9.43.19.2. Continuing TECHMAP pass.
Using template $paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4 for cells of type $paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4.
Using template $paramod$838872d5a4bab89607f53482b205c0fd50d8b82e\CCU2C for cells of type $paramod$838872d5a4bab89607f53482b205c0fd50d8b82e\CCU2C.
Using template $paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF for cells of type $paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF.
Using template $paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF_$abc9_byp for cells of type $paramod$37e41664cab9052a9b41c89036e0524f666a0fee\TRELLIS_FF_$abc9_byp.
Using template $paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF for cells of type $paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF.
Using template $paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF_$abc9_byp for cells of type $paramod$68581f66a8fa831820fa7633bd24ba569ae9d7e3\TRELLIS_FF_$abc9_byp.
Using template $paramod\$__ABC9_SCC_BREAKER\WIDTH=32'00000000000000000000000000000010 for cells of type $__ABC9_SCC_BREAKER.
Using template $paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4_$abc9_byp for cells of type $paramod$2074b3813575c9ede27f9a04ee0bf291c9c7bf2f\TRELLIS_DPR16X4_$abc9_byp.
No more expansions possible.
<suppressed ~276 debug messages>
Removed 129 unused cells and 14291 unused wires.

9.44. Executing TECHMAP pass (map to technology primitives).

9.44.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFE_PP1N_'.
Generating RTLIL representation for module `\$_ALDFF_NP_'.
Generating RTLIL representation for module `\$_ALDFF_PP_'.
Generating RTLIL representation for module `\$_ALDFFE_NPN_'.
Generating RTLIL representation for module `\$_ALDFFE_NPP_'.
Generating RTLIL representation for module `\$_ALDFFE_PPN_'.
Generating RTLIL representation for module `\$_ALDFFE_PPP_'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

9.44.2. Continuing TECHMAP pass.
Using template $paramod$d6fad69df4b6793100fda03bb83504fe9b335c70\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000010 for cells of type $lut.
Using template $paramod$24dda3d84c2d1229b04db6e99ba736b37e996291\$lut for cells of type $lut.
Using template $paramod$4dd02d24b336479f351a70553acd634d0ada41f7\$lut for cells of type $lut.
Using template $paramod$c12c51d8eefdefea93ab3657624536578d42cf56\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010011 for cells of type $lut.
Using template $paramod$aa1a3bdfce7d7fc35047606a675df81a86f48f6a\$lut for cells of type $lut.
Using template $paramod$f2d65ac67065693e28d8e118b38ca00c572310a1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod$eea07ee1f18427ae8797af9f3739c511aa096793\$lut for cells of type $lut.
Using template $paramod$5e9374f44a27c3f8a1c38af244ec43ceb4fb8d4f\$lut for cells of type $lut.
Using template $paramod$feb6339396f97c5b71a62bdce1bb21488deb9d9c\$lut for cells of type $lut.
Using template $paramod$f708220b7d61bf7c74622c407d9df0e1f326e49a\$lut for cells of type $lut.
Using template $paramod$14156b2616c16a10f2581287a57d3343ee88c698\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011101 for cells of type $lut.
Using template $paramod$e51a8a571bee774247b38f52d6e85fd62ae52cea\$lut for cells of type $lut.
Using template $paramod$b89c522b7f70adaee1a35d80e932f38159b6a445\$lut for cells of type $lut.
Using template $paramod$f58e0d90afc57a738914697b6a4a7319b30d7e7e\$lut for cells of type $lut.
Using template $paramod$c804d3804ea70f6cee2f6063a3117ad6a823da98\$lut for cells of type $lut.
Using template $paramod$9b5adbcc1983522e183f7d22bb4ef0787febf9d7\$lut for cells of type $lut.
Using template $paramod$09312832496e3ee8317d1ddf4e4ce05d551d0a6d\$lut for cells of type $lut.
Using template $paramod$17c27ffdda03355f95b2ba5edc73ca082237c935\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010011 for cells of type $lut.
Using template $paramod$2902eb8ec3ca272968b5d8a7010e48f85069ed0f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100010 for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod$6e238df02989b317f10820a22773676e71120644\$lut for cells of type $lut.
Using template $paramod$5e96c51e862795fcf5123ad90ed33b3bddf109cb\$lut for cells of type $lut.
Using template $paramod$9664b2f5fd61944d7798b30cde43b99ccda87303\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1101 for cells of type $lut.
Using template $paramod$c79843a7a21eda73c585e76a35dd51b0a4d6fd36\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110010 for cells of type $lut.
Using template $paramod$1d63a6d852b75599bf0d2c06f6696bd91dd8e373\$lut for cells of type $lut.
Using template $paramod$16894c241be5ea1f024e9339dea788b4dbe184ae\$lut for cells of type $lut.
Using template $paramod$431a568a8581a1b5c20a653eb617fe1b29bf4609\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001000 for cells of type $lut.
Using template $paramod$c758cf8aee7c6f51f0f08a610e549e87b7c5efaf\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod$4385b611926e5c0509dba4de58311d325da0ff0d\$lut for cells of type $lut.
Using template $paramod$30305e55a780880b9c824fe3509a4d981acb0f2b\$lut for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001010 for cells of type $lut.
Using template $paramod$11ec7271d8e6e5aeaace08c13e4c601f10e31038\$lut for cells of type $lut.
Using template $paramod$a1d323730045824cfc84bb9f4ee8031f1c4dcc9e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001011 for cells of type $lut.
Using template $paramod$873c285bdccf0ac2b60d2304ea5cd14bf211d2a6\$lut for cells of type $lut.
Using template $paramod$d9922e15eb5da1acc26e937540cc16b16c2ad42c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod$108952590fe845e8e70a99827bbbccefd1a29568\$lut for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod$d86f105a0129af712b1c66abd19f42ca0ea9cdda\$lut for cells of type $lut.
Using template $paramod$7bb6a37e65823eeb4b38c370fec30ab082759a14\$lut for cells of type $lut.
Using template $paramod$a15fd389a2f54cb7b94707b25934d226e68d9e2e\$lut for cells of type $lut.
Using template $paramod$61c4cbf8581170b67138b98e32863cf2de767f72\$lut for cells of type $lut.
Using template $paramod$728af64da11d42500d51a71dd7007ac25b15b46a\$lut for cells of type $lut.
Using template $paramod$f9813472aa48e533b3838c6f2316dc2e78c66111\$lut for cells of type $lut.
Using template $paramod$eba7de026ff587370e320127e266317dae097a89\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11011000 for cells of type $lut.
Using template $paramod$bca3db4564d3d9a60895ee32c7baa477e40a032f\$lut for cells of type $lut.
Using template $paramod$6e1e2bf7f29cfe416c0ceb4dc5c676edd2a3b996\$lut for cells of type $lut.
Using template $paramod$20f3f4b8e32f8a8b038b0056872dc94926194798\$lut for cells of type $lut.
Using template $paramod$5a05aceb4b3a5e65f91bcffb0fccca72a8307af8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0111 for cells of type $lut.
Using template $paramod$f651a484d8fafb22b76079820099c357ea7e8d28\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01101111 for cells of type $lut.
Using template $paramod$e5cb1a9410f4d50f6cdc8a4bd882a00404279afe\$lut for cells of type $lut.
Using template $paramod$d21d214a5aa271f2d9da3f90f22432c0ecee130f\$lut for cells of type $lut.
Using template $paramod$179512a187da069f3b79ef6612a41e494e7d54b6\$lut for cells of type $lut.
Using template $paramod$daac9b1e7bb2ac018f7132a3fbe0026ddd7b1a71\$lut for cells of type $lut.
Using template $paramod$9e776ec1b34d86f88d5c27558aea8207655d0a2b\$lut for cells of type $lut.
Using template $paramod$feac1814a13647ff95d85e23385825c648d6c2ee\$lut for cells of type $lut.
Using template $paramod$f8f63b209b7230e81958663ff24fef1613156af7\$lut for cells of type $lut.
Using template $paramod$25003f26a78bb2f583f23824f1e0b8cc16b88761\$lut for cells of type $lut.
Using template $paramod$4541c098116f7292d10d7d30a0922be20fa68a41\$lut for cells of type $lut.
Using template $paramod$3830fbfbec2ed4d6e3e957e17e4fca97b7adef1f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100100 for cells of type $lut.
Using template $paramod$9251a09ac5ff2c5b34a425e6ff5bcb01bf76e4b6\$lut for cells of type $lut.
Using template $paramod$9a3f636fceb77b433ff646d7ccd7a7774727ac62\$lut for cells of type $lut.
Using template $paramod$9e1c71e4061579ab0dc45ad23a230ab191f0078a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111000 for cells of type $lut.
Using template $paramod$f9b715fbf1040e81e900b2461c2390d17ed5e988\$lut for cells of type $lut.
Using template $paramod$018d71a0fe325d6362687fe53ac13dd6340e400d\$lut for cells of type $lut.
Using template $paramod$3fb3f0de5b347667e45afe024bcf37620e184335\$lut for cells of type $lut.
Using template $paramod$b40ed8783cd24943f4c31bddb9063d9895eb569a\$lut for cells of type $lut.
Using template $paramod$ed029e6c1e87a70cff2c1ea2f266e7c04d3c3742\$lut for cells of type $lut.
Using template $paramod$a8448038ed7a80f94a1546ca3bb253da86cb505c\$lut for cells of type $lut.
Using template $paramod$d7856980c8e3df62f97c26ab34037f33a9e831b5\$lut for cells of type $lut.
Using template $paramod$4e09fb85ad5980549134c5674f63e37de31e60bc\$lut for cells of type $lut.
Using template $paramod$cf511fa259177753df42a81921eff3b089c56740\$lut for cells of type $lut.
Using template $paramod$0d5da56248b9c03a478823f7dfdcd89f8bbb9344\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10100010 for cells of type $lut.
Using template $paramod$097592bb16245531f0716c5ddb18d7090f9c7d9d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01011011 for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod$09aa8a3143d50cc59564172c2564d6271fb3a300\$lut for cells of type $lut.
Using template $paramod$cbb2dfe31d344d3326d567c2ed5a4b2a29f63219\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001010 for cells of type $lut.
Using template $paramod$3ef9e5e476d24e8c0c3939cc94513f0e69cffdf2\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00100000 for cells of type $lut.
Using template $paramod$f85f1073c412d406200a6a72283f918c8b751314\$lut for cells of type $lut.
Using template $paramod$153c6cdaaddbc43e6ef3facd06aa851de33910ae\$lut for cells of type $lut.
Using template $paramod$175104ad114973f30397e1a69eae08cff730fc58\$lut for cells of type $lut.
Using template $paramod$9c6e6a10ea00e5b0682f6243b802d7839a398197\$lut for cells of type $lut.
Using template $paramod$364c9ffbffac467d60dfec81bba4e18476c15602\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000111 for cells of type $lut.
Using template $paramod$2f17e1be43f3ac07ddcc5afec3b8e6a34320bd15\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010001 for cells of type $lut.
Using template $paramod$c50bf79556f7c35c37bbd3d892f752a0609f21ca\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000100 for cells of type $lut.
Using template $paramod$7f99965477b01e4e59442ae3a0be9c4224de0d1d\$lut for cells of type $lut.
Using template $paramod$f9e6b8c8bbaa4b164a91075c553341d15958d0ba\$lut for cells of type $lut.
Using template $paramod$7c0c958e927437390cb58f1395b98e0852db607c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000110 for cells of type $lut.
Using template $paramod$70748917fafe684e9ab1f564e1b1e9d493be97d0\$lut for cells of type $lut.
Using template $paramod$b9d8b7e91a2c68da033af948ea0bd8bdebbaf6b2\$lut for cells of type $lut.
Using template $paramod$6e98fea82e288eb70fa7833e8442d9b57c9d67e7\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100000 for cells of type $lut.
Using template $paramod$ef3f2547cf84a471ee84948e0f16dbdee8ed5b5d\$lut for cells of type $lut.
Using template $paramod$1d371fb9f6e4d1b0a5db1e4212eac65c4a243863\$lut for cells of type $lut.
Using template $paramod$a238bb199d4b53d4c976c9e68dafcfe86b19f40f\$lut for cells of type $lut.
Using template $paramod$43920eead97cfe6c48d10f084962e7b11714ac27\$lut for cells of type $lut.
Using template $paramod$55c170b7d18e6d4355fb394a837b3e73f248c570\$lut for cells of type $lut.
Using template $paramod$934f5b681ffcbe8b2094837d27e10e3b0c78fca9\$lut for cells of type $lut.
Using template $paramod$96676f91588288ab807784b21de3e7b368e3725f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110000 for cells of type $lut.
Using template $paramod$e62f45b6370b37227eac5c7ba9b02449272d689e\$lut for cells of type $lut.
Using template $paramod$db0c2c1bede09dd00c913c018488365d2c1233af\$lut for cells of type $lut.
Using template $paramod$5a2475f0ff8adfa6c48e46c1977dad3962daa33d\$lut for cells of type $lut.
Using template $paramod$a5516fc31d1e552de2435200bb732b4d4ad63a9c\$lut for cells of type $lut.
Using template $paramod$e25a5c3a022add115e3a4a3e883e034775c3c637\$lut for cells of type $lut.
Using template $paramod$dc2f2298d1a562c69fd3b04440ed9f17fd047f12\$lut for cells of type $lut.
Using template $paramod$34ccb0403abd26609d9a7a8ea9a44b40cc4b3caf\$lut for cells of type $lut.
Using template $paramod$b2e8d279775d333b39e310bd45fd5952acdde290\$lut for cells of type $lut.
Using template $paramod$b45e5cb971154e30a797eecb0461619c3eeae12d\$lut for cells of type $lut.
Using template $paramod$fe1497207981e9e4f2f9556fad9970ec052e0a6d\$lut for cells of type $lut.
Using template $paramod$c8f16510db975553c8b0be1064e8f5234175f8a8\$lut for cells of type $lut.
Using template $paramod$309e58fbe12031afb467cd86a87feabd651e8e4b\$lut for cells of type $lut.
Using template $paramod$c12ccf6f4a45af2fc32841681cf5dd37beaa3176\$lut for cells of type $lut.
Using template $paramod$95405290ab850162780aaf9d904598a9a9ee1d4b\$lut for cells of type $lut.
Using template $paramod$d74fbe9e1e1c6e5b250b76a749c120997ce28145\$lut for cells of type $lut.
Using template $paramod$e0286d7bdebdb6346cb367bb1962e01892ba2e32\$lut for cells of type $lut.
Using template $paramod$8a36981e65cb89b693569e852c8c74aa42a4664a\$lut for cells of type $lut.
Using template $paramod$be48d952fcad8a16b8d84daa4c48a3065f343e5e\$lut for cells of type $lut.
Using template $paramod$64ed40f74e19bff7f50592ea328f713c3f8b3f50\$lut for cells of type $lut.
Using template $paramod$2167e1c14e12a13542e020a3167fe33c816dba63\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010000 for cells of type $lut.
Using template $paramod$608f40069c27841a5b3bdf03643a34bdc8974072\$lut for cells of type $lut.
Using template $paramod$b93d1ea7a612a32c185108f67a153d44ffb9aac2\$lut for cells of type $lut.
Using template $paramod$06e62c2045624c211a1abe4f2f36c8f22c688165\$lut for cells of type $lut.
Using template $paramod$e5b3302d2e0dfd2734490d2b01edce401faa8610\$lut for cells of type $lut.
Using template $paramod$2646f79d883fe55c6115f3a5c1d9911a69497523\$lut for cells of type $lut.
Using template $paramod$ddedb6aa848e131547a6d208fe197374120fb71c\$lut for cells of type $lut.
Using template $paramod$82b4a585d1edcb5c6e755dc9bd3392228a1c1304\$lut for cells of type $lut.
Using template $paramod$5bb4589aef4e67d4113ef14e01c5bb618a3e9139\$lut for cells of type $lut.
Using template $paramod$473612405d641082b37175241e29b5d73d692c11\$lut for cells of type $lut.
Using template $paramod$7f12e74fd19900efe4107b75338bcbc781e0186a\$lut for cells of type $lut.
Using template $paramod$a531016d94c46c0d82bbdc3e6697a417544a82f9\$lut for cells of type $lut.
Using template $paramod$2af13f72402b2e69e15154f57ce61aa5ce22fa84\$lut for cells of type $lut.
Using template $paramod$bf9bca7807407971e14a515132d4f0d80e05fd4f\$lut for cells of type $lut.
Using template $paramod$edfdd002d369b276282ba114ad80081aeb01c009\$lut for cells of type $lut.
Using template $paramod$29e6d4598488760861f6b73d2b7f65cb302fdcde\$lut for cells of type $lut.
Using template $paramod$f7fbfe99841e4f498df9bf6f18bab55e2a6c460a\$lut for cells of type $lut.
Using template $paramod$e57bcb018bfe8170bc04f13a73befe2def28cdf3\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001011 for cells of type $lut.
Using template $paramod$c35ad3063d5038410210ddc72c1fd5fed46413b4\$lut for cells of type $lut.
Using template $paramod$cf52221ef2d451442dd7d72d5c8ad598e89310e9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod$bed819f2fe59d91ad56136e8f15178f79fcfcc6c\$lut for cells of type $lut.
Using template $paramod$4f239de687ee1260851b40b4b5054dd4a30e42b2\$lut for cells of type $lut.
Using template $paramod$5abc1bbf6b656175e03057177700035d972db150\$lut for cells of type $lut.
Using template $paramod$389b8bdb0ccb5568a871d71e7c494abd44563a7b\$lut for cells of type $lut.
Using template $paramod$769bdbbde83614df0f4ab5f54e777ded51bb10ce\$lut for cells of type $lut.
Using template $paramod$d2443d52005dbac7b0e077d35727d1da4f34e6ec\$lut for cells of type $lut.
Using template $paramod$70f68cc10fbeada9b6fa90c3bb75475e348ca467\$lut for cells of type $lut.
Using template $paramod$f5c23b297b0a8ca096118d63d2c74ddd6cbea134\$lut for cells of type $lut.
Using template $paramod$eb99b6210477e060473318f219c5dc396b44e59e\$lut for cells of type $lut.
Using template $paramod$5dc745bb48e2cf535179547ba13f0fe5364d6d54\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~3390 debug messages>

9.45. Executing OPT_LUT_INS pass (discard unused LUT inputs).
Optimizing LUTs in SOC.
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29336.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29336.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29322.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29322.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29328.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29328.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29331.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29293.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29283.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29340.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29340.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$3904.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$3811.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$3766.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$3511.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 0)
  Optimizing lut $abc$29275$lut$aiger29274$3511.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$3511.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$3511.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$3511.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y[22].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$29275$lut$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y[22].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$29275$lut$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y[21].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$29275$lut$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y[21].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$3437.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$3437.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$3437.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$3437.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][22].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y[20].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$29275$lut$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y[20].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][21].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$3372.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$3372.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$3372.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$3372.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$3321.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 0)
  Optimizing lut $abc$29275$lut$aiger29274$3321.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$3321.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$3321.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$3321.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y[19].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$29275$lut$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y[19].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$3262.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 0)
  Optimizing lut $abc$29275$lut$aiger29274$3262.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$3262.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$3262.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$3262.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y[18].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$29275$lut$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y[18].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$29275$lut$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y[17].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$29275$lut$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y[17].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$3192.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$3192.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$3192.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$3192.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$3138.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$3138.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$3138.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$3138.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y[16].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$29275$lut$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y[16].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$29275$lut$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y[15].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$29275$lut$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y[15].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$3055.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 0)
  Optimizing lut $abc$29275$lut$aiger29274$3055.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$3055.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$3055.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$3055.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y[14].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$29275$lut$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y[14].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$2933.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$2933.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$2933.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$2933.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$2933.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut7 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$2923.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$2923.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$2923.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$2923.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$2923.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$2923.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut7 (4 -> 1)
  Optimizing lut $abc$29275$lut$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y[13].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$29275$lut$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y[13].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$2842.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$2842.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$2842.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$2842.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$2842.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut7 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$2832.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$2832.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$2832.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$2832.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$2832.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$2832.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut7 (4 -> 1)
  Optimizing lut $abc$29275$lut$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y[12].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$29275$lut$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y[12].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$29275$lut$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y[11].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$29275$lut$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y[11].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$29275$lut$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y[10].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$29275$lut$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y[10].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$29275$lut$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y[9].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$29275$lut$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y[9].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$2553.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$2553.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$2553.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$2553.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$2553.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut7 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$2543.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$2543.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$2543.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$2543.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$2543.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$2543.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut7 (4 -> 1)
  Optimizing lut $abc$29275$lut$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y[8].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$29275$lut$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y[8].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$29275$lut$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y[7].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$29275$lut$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y[7].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$2413.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y[6].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$29275$lut$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y[6].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$2329.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$2293.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 0)
  Optimizing lut $abc$29275$lut$aiger29274$2293.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 0)
  Optimizing lut $abc$29275$lut$aiger29274$2293.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$2293.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$2293.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$2293.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut7 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$2279.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 0)
  Optimizing lut $abc$29275$lut$aiger29274$2247.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$2212.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$2212.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$2203.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$2203.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$2203.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 1)
  Optimizing lut $abc$29275$lut$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y[5].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$29275$lut$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y[5].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$29275$lut$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y[4].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$29275$lut$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y[4].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$2114.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$2064.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$2064.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$2055.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$2055.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$2055.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 1)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][4].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y[3].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$29275$lut$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y[3].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$29275$lut$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y[2].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$29275$lut$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y[2].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][3].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\per_uart.\uart0.$procmux$479_Y[3].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$29275$lut$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y[1].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$29275$lut$flatten\CPU.$ternary$cores/cpu/femtorv32_quark.v:354$418_Y[1].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$1355.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$1355.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$1355.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$1355.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$1355.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$1318.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 0)
  Optimizing lut $abc$29275$lut$aiger29274$1318.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 0)
  Optimizing lut $abc$29275$lut$aiger29274$1318.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 0)
  Optimizing lut $abc$29275$lut$aiger29274$1318.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 0)
  Optimizing lut $abc$29275$lut$aiger29274$1318.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut7 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29356.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29356.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29356.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$1777.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$1738.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$1738.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$1729.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$1729.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 1)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29360.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29368.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29368.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29368.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29396.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29400.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$29275$lut$aiger29274$1574.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$29275$lut$aiger29274$1141.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$1136.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$1136.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$1109.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$29275$lut$aiger29274$1109.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 0)
  Optimizing lut $abc$29275$lut$aiger29274$1109.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 0)
  Optimizing lut $abc$29275$lut$aiger29274$1109.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$1109.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$1109.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut7 (4 -> 2)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][10].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][15].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][23].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][7].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][25].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][5].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][6].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][9].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$1109.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$29275$lut$aiger29274$1136.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$1163.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$1239.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$1146.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$1310.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$1318.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$29275$lut$aiger29274$1318.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$29275$lut$aiger29274$1325.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$29275$lut$aiger29274$1332.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$29275$lut$aiger29274$1339.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$29275$lut$aiger29274$1355.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$1355.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$1381.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$29275$lut$aiger29274$1480.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29374.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$1506.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29367.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$29275$lut$aiger29274$1615.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$1704.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$1767.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$1858.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29351.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$29275$lut$aiger29274$1982.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29343.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$29275$lut$aiger29274$2026.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$2096.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$2104.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$2243.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$2255.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$29275$lut$aiger29274$2279.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$2293.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$2311.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$2319.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$2409.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$2421.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$29275$lut$aiger29274$2479.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$2543.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$29275$lut$aiger29274$2553.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$2568.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$2678.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$2740.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$2832.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$29275$lut$aiger29274$2842.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$2857.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$2861.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$2871.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$2923.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$29275$lut$aiger29274$2933.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$2947.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$3010.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$3022.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$3055.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$3080.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$29275$lut$aiger29274$3138.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$3138.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$29275$lut$aiger29274$3163.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$29275$lut$aiger29274$3192.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$3192.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$29275$lut$aiger29274$3207.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$3217.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$3262.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$3321.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$3336.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$3346.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$3372.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$3372.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$29275$lut$aiger29274$3397.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$29275$lut$aiger29274$3437.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$3437.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$29275$lut$aiger29274$3459.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$3511.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$3522.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][28].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$3774.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][29].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$3819.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][30].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$3904.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$3904.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][10].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][11].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][12].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][13].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][14].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][15].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][16].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][17].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][18].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][19].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][1].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][20].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][21].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][22].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][23].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][24].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][25].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][26].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][27].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][28].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][29].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][2].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][30].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][3].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][4].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][5].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][6].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][7].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][8].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][9].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][14].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][16].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][18].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][20].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][24].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][27].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][1].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$2036.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][8].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][11].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][17].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][26].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29355.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][12].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][13].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][2].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\per_uart.\uart0.$procmux$557_Y[3].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$29275$lut$flatten\per_uart.\uart0.$procmux$567_Y[3].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$29275$lut$aiger29274$1525.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$29275$lut$flatten\CPU.$0\aluReg[31:0][19].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29345.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29286.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29278.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29302.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29281.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29288.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29290.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29328.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29284.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29322.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29336.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$29275$lut$aiger29274$2293.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$2212.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29331.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29335.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29335.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$2064.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29340.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29345.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29349.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29349.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29355.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$1738.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$29275$lut$aiger29274$1729.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29360.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29365.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29365.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29368.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29374.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$29275$lut$aiger29274$1405.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29384.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29386.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29395.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29399.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29423.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29424.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29425.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29426.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29427.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29428.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29429.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29430.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29431.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29432.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29433.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29434.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29435.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29436.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29437.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$29438.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
Removed 0 unused cells and 2027 unused wires.

9.46. Executing AUTONAME pass.
Renamed 105297 objects in module SOC (151 iterations).
<suppressed ~3552 debug messages>

9.47. Executing HIERARCHY pass (managing design hierarchy).
Attribute `top' found on module `SOC'. Setting top module to SOC.

9.47.1. Analyzing design hierarchy..
Top module:  \SOC

9.47.2. Analyzing design hierarchy..
Top module:  \SOC
Removed 0 unused modules.

9.48. Printing statistics.

=== SOC ===

   Number of wires:               1508
   Number of wire bits:           4429
   Number of public wires:        1508
   Number of public wire bits:    4429
   Number of ports:                  5
   Number of port bits:              5
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2185
     $scopeinfo                      6
     CCU2C                         116
     DP16KD                          8
     L6MUX21                        94
     LUT4                         1229
     PFUMX                         287
     TRELLIS_DPR16X4                32
     TRELLIS_FF                    413

9.49. Executing CHECK pass (checking for obvious problems).
Checking module SOC...
Found and reported 0 problems.

10. Executing JSON backend.

Warnings: 131 unique messages, 137 total
End of script. Logfile hash: 16b7018b4f, CPU: user 4.94s system 0.19s, MEM: 99.71 MB peak
Yosys 0.53 (git sha1 53c22ab7c0ced80861c7536c5dae682c30fb5834, clang++ 16.0.0 -fPIC -O3)
Time spent: 30% 11x techmap (1 sec), 19% 1x abc9_exe (1 sec), ...
